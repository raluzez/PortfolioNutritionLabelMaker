{"ast":null,"code":"import _objectSpread from \"/home/lukas/Desktop/projects/nutrition-label-maker/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  selectedProducts: [],\n  clickedProduct: \"\",\n  showModal: false,\n  reciepieNutrients: {\n    name: \"\",\n    quantity: 0,\n    units: \"g\",\n    totalNutrients: {\n      ENERC_KCAL: {\n        quantity: 0\n      },\n      FAT: {\n        quantity: 0\n      },\n      FASAT: {\n        quantity: 0\n      },\n      FATRN: {\n        quantity: 0\n      },\n      CHOCDF: {\n        quantity: 0\n      },\n      FIBTG: {\n        quantity: 0\n      },\n      SUGAR: {\n        quantity: 0\n      },\n      PROCNT: {\n        quantity: 0\n      },\n      CHOLE: {\n        quantity: 0\n      },\n      NA: {\n        quantity: 0\n      },\n      CA: {\n        quantity: 0\n      },\n      FE: {\n        quantity: 0\n      },\n      VITA_RAE: {\n        quantity: 0\n      },\n      VITC: {\n        quantity: 0\n      }\n    }\n  }\n};\nconsole.log(initialState);\n\nconst addToRecipieNutrients = (productNutrients, amountOfProduct) => {\n  let totalRecipies = initialState.reciepieNutrients.totalNutrients;\n  Object.keys(totalRecipies).map(key => {\n    totalRecipies[key].quantity += productNutrients[key].quantity / 100 * amountOfProduct;\n  });\n  console.log(totalRecipies);\n  return totalRecipies;\n};\n\nconst addToRecipieAmount = amount => {\n  let totalAmount = initialState.reciepieNutrients.quantity;\n  console.log(totalAmount, amount);\n  totalAmount += Number(amount);\n  console.log(totalAmount, amount);\n  return Number(totalAmount);\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SELECT_PRODUCT:\n      action.product.quantity = action.amount;\n      return _objectSpread({}, state, {\n        selectedProducts: state.selectedProducts.concat(action.product),\n        showModal: false,\n        reciepieNutrients: _objectSpread({}, state.reciepieNutrients, {\n          totalNutrients: addToRecipieNutrients(action.product.totalNutrients, action.amount),\n          quantity: addToRecipieAmount(action.amount)\n        })\n      });\n\n    case actionTypes.CLICKED_PRODUCT:\n      return _objectSpread({}, state, {\n        clickedProduct: action.product,\n        showModal: true\n      });\n\n    case actionTypes.CLOSE_MODAL:\n      return _objectSpread({}, state, {\n        showModal: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/Store/reducers/productsList.js"],"names":["actionTypes","initialState","selectedProducts","clickedProduct","showModal","reciepieNutrients","name","quantity","units","totalNutrients","ENERC_KCAL","FAT","FASAT","FATRN","CHOCDF","FIBTG","SUGAR","PROCNT","CHOLE","NA","CA","FE","VITA_RAE","VITC","console","log","addToRecipieNutrients","productNutrients","amountOfProduct","totalRecipies","Object","keys","map","key","addToRecipieAmount","amount","totalAmount","Number","reducer","state","action","type","SELECT_PRODUCT","product","concat","CLICKED_PRODUCT","CLOSE_MODAL"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n    selectedProducts:[],\n    clickedProduct: \"\",\n    showModal:false,\n    reciepieNutrients : {   \n            name : \"\",\n            quantity : 0,\n            units : \"g\",\n            totalNutrients : {\n                ENERC_KCAL : {quantity : 0},\n                FAT : {quantity : 0},\n                FASAT : {quantity : 0},\n                FATRN : {quantity : 0},\n                CHOCDF : {quantity : 0},\n                FIBTG : {quantity : 0},\n                SUGAR : {quantity : 0},\n                PROCNT : {quantity : 0},\n                CHOLE : {quantity : 0},\n                NA : {quantity : 0},\n                CA : {quantity: 0},\n                FE : {quantity: 0},\n                VITA_RAE : {quantity : 0},\n                VITC : {quantity : 0}\n            }\n    }\n}\n\nconsole.log(initialState)\n\nconst addToRecipieNutrients = (productNutrients,amountOfProduct) => {\n    let totalRecipies = initialState.reciepieNutrients.totalNutrients\n    Object.keys(totalRecipies).map((key) => {\n        totalRecipies[key].quantity += (productNutrients[key].quantity/100)*amountOfProduct\n    })\n    console.log(totalRecipies)\n    return totalRecipies\n}\n\nconst addToRecipieAmount = (amount) => {\n    let totalAmount = initialState.reciepieNutrients.quantity\n    console.log(totalAmount, amount)\n    totalAmount += Number(amount)\n    console.log(totalAmount, amount)\n    return Number(totalAmount)\n}\n\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case actionTypes.SELECT_PRODUCT: \n            action.product.quantity = action.amount\n            return {\n                ...state,\n                selectedProducts: state.selectedProducts.concat(action.product),\n                showModal:false,\n                reciepieNutrients : {\n                    ...state.reciepieNutrients,\n                    totalNutrients : addToRecipieNutrients(action.product.totalNutrients, action.amount),\n                    quantity:addToRecipieAmount(action.amount)\n                }\n            }\n        case actionTypes.CLICKED_PRODUCT:\n            return {\n                ...state,\n                clickedProduct: action.product,\n                showModal:true\n            }\n        case actionTypes.CLOSE_MODAL:\n            return {\n                ...state,\n                showModal:false\n            }\n        default: return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}