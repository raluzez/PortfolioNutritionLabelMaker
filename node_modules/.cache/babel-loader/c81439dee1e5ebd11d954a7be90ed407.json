{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/components/Product/Product.js\";\nimport React from \"react\";\nimport Styles from \"./Product.module.css\";\n\nconst Product = props => {\n  const fat = props.fat,\n        carbs = props.carbs,\n        protein = props.protein;\n  const total = fat + carbs + protein;\n  return React.createElement(\"div\", {\n    className: Styles.Container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.ProductAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-birthday-cake\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: Styles.ProductBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.ProductName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.name), React.createElement(\"div\", {\n    className: Styles.StatusBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.StatusCarbsBar,\n    style: {\n      width: \"\".concat(carbs / total * 100, \"%\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: Styles.StatusProteinBar,\n    style: {\n      width: \"\".concat(carbs / total * 100, \"%\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })))) // <div className={Styles.Product}\n  //     onClick={props.clicked}>\n  //     <div>{props.name}</div>\n  //     <div className={Styles.Doughnut}>\n  //         <Doughnut \n  //         data={{\n  //             labels:[\"Fat\", \"Carbohydrates\", \"Protein\"],\n  //             datasets: [{\n  //                 data:[props.fatCalories,props.carbohydratesCalories, props.proteinCalories],\n  //                 backgroundColor:[\"#FF6384\",\"#FFCE56\",\"#36A2EB\"]\n  //             },]\n  //         }}\n  //         options={{\n  //             legend:{\n  //                 display: false\n  //             },\n  //             tooltips: {\n  //                 callbacks: {\n  //                     label:(tooltipItem,data)=>(`${data.labels[tooltipItem.index]} : ${(data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]/data.datasets[tooltipItem.datasetIndex]._meta[Object.keys(data.datasets[tooltipItem.datasetIndex]._meta)[0]].total*100).toFixed(1)} %`)\n  //                 }\n  //             }\n  //         }}/>\n  //     </div>\n  // </div>\n  ;\n};\n\nexport default Product;","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/components/Product/Product.js"],"names":["React","Styles","Product","props","fat","carbs","protein","total","Container","ProductAvatar","ProductBody","ProductName","name","StatusBar","StatusCarbsBar","width","StatusProteinBar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAG;AAAA,QACZC,GADY,GACYD,KADZ,CACZC,GADY;AAAA,QACPC,KADO,GACYF,KADZ,CACPE,KADO;AAAA,QACAC,OADA,GACYH,KADZ,CACAG,OADA;AAEpB,QAAMC,KAAK,GAAGH,GAAG,GAACC,KAAJ,GAAUC,OAAxB;AAEA,SAEA;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACO,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACQ,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAER,MAAM,CAACS,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAET,MAAM,CAACU,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCR,KAAK,CAACS,IAA3C,CADJ,EAEI;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACY,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAEZ,MAAM,CAACa,cADtB;AAEI,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,YAAKV,KAAK,GAACE,KAAP,GAAc,GAAlB;AAAN,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI;AACI,IAAA,SAAS,EAAEN,MAAM,CAACe,gBADtB;AAEI,IAAA,KAAK,EAAE;AAACD,MAAAA,KAAK,YAAKV,KAAK,GAACE,KAAP,GAAc,GAAlB;AAAN,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAFJ,CAJJ,CAFA,CAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;AA8CF,CAlDF;;AAoDA,eAAeL,OAAf","sourcesContent":["import React from \"react\";\nimport Styles from \"./Product.module.css\";\n\nconst Product = props =>{\n    const { fat, carbs, protein } = props\n    const total = fat+carbs+protein\n\n    return (\n\n    <div className={Styles.Container}>\n        <div className={Styles.ProductAvatar}>\n            <i className=\"fas fa-birthday-cake\"></i>\n        </div>\n        <div className={Styles.ProductBody}>\n            <div className={Styles.ProductName}>{props.name}</div>\n            <div className={Styles.StatusBar}>\n                <div \n                    className={Styles.StatusCarbsBar}\n                    style={{width:`${(carbs/total)*100}%`}}>\n                </div>\n                <div \n                    className={Styles.StatusProteinBar}\n                    style={{width:`${(carbs/total)*100}%`}}>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n    // <div className={Styles.Product}\n    //     onClick={props.clicked}>\n    //     <div>{props.name}</div>\n    //     <div className={Styles.Doughnut}>\n    //         <Doughnut \n    //         data={{\n    //             labels:[\"Fat\", \"Carbohydrates\", \"Protein\"],\n    //             datasets: [{\n    //                 data:[props.fatCalories,props.carbohydratesCalories, props.proteinCalories],\n    //                 backgroundColor:[\"#FF6384\",\"#FFCE56\",\"#36A2EB\"]\n    //             },]\n    //         }}\n    //         options={{\n    //             legend:{\n    //                 display: false\n    //             },\n    //             tooltips: {\n    //                 callbacks: {\n    //                     label:(tooltipItem,data)=>(`${data.labels[tooltipItem.index]} : ${(data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]/data.datasets[tooltipItem.datasetIndex]._meta[Object.keys(data.datasets[tooltipItem.datasetIndex]._meta)[0]].total*100).toFixed(1)} %`)\n    //                 }\n    //             }\n    //         }}/>\n    //     </div>\n    // </div>\n)}\n\nexport default Product"]},"metadata":{},"sourceType":"module"}