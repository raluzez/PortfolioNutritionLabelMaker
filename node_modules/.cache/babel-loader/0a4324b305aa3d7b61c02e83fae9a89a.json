{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Home/Home.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport RecipeModal from \"../../components/Recipe/RecipeModal/RecipeModal\";\nimport ItemsList from \"../../components/ItemsList/ItemsList\";\nimport NutritionLabel from \"../../components/NutritionLabel/NutritionLabel\";\nimport * as actions from \"../../Store/actions/productsList\";\n\nconst home = props => {\n  // const addName = (event) => \n  //     { console.log(props.recipeAsProduct.name )\n  //         return(\n  //         [...props.recipeAsProduct],\n  //         props.recipeAsProduct.name = event.target.value\n  //         )}\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    show: props.showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(RecipeModal, {\n    recipe: props.recipeAsProduct,\n    closeIconClicked: props.onCloseModal,\n    addName: event => props.onAddRecipeName(event.target.value),\n    recipeItems: props.selectedProducts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(ItemsList, {\n    addProductClicked: () => props.history.push(\"/productlist\"),\n    selectedProducts: props.selectedProducts,\n    saveRecipeClicked: () => props.onSaveRecipeClicked(props.recipeAsProduct),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(NutritionLabel, {\n    product: props.recipeAsProduct,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    recipeAsProduct: state.recipeNutrients,\n    selectedProducts: state.selectedProducts,\n    showModal: state.showModal\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSaveRecipeClicked: product => dispatch(actions.productClicked(product)),\n    onCloseModal: () => dispatch(actions.closeModal()),\n    onAddRecipeName: recipeName => dispatch(actions.addRecipeName(recipeName))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(home);","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Home/Home.js"],"names":["React","connect","Modal","RecipeModal","ItemsList","NutritionLabel","actions","home","props","showModal","recipeAsProduct","onCloseModal","event","onAddRecipeName","target","value","selectedProducts","history","push","onSaveRecipeClicked","mapStateToProps","state","recipeNutrients","mapDispatchToProps","dispatch","product","productClicked","closeModal","recipeName","addRecipeName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,WAAP,MAAwB,iDAAxB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kCAAzB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAU;AAEnB;AACA;AACA;AACA;AACA;AACA;AAGA,SACQ,0CACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,KAAK,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AACI,IAAA,MAAM,EAAED,KAAK,CAACE,eADlB;AAEI,IAAA,gBAAgB,EAAEF,KAAK,CAACG,YAF5B;AAGI,IAAA,OAAO,EAAEC,KAAK,IAAIJ,KAAK,CAACK,eAAN,CAAsBD,KAAK,CAACE,MAAN,CAAaC,KAAnC,CAHtB;AAII,IAAA,WAAW,EAAEP,KAAK,CAACQ,gBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAQI,oBAAC,SAAD;AACI,IAAA,iBAAiB,EAAE,MAAKR,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmB,cAAnB,CAD5B;AAEI,IAAA,gBAAgB,EAAEV,KAAK,CAACQ,gBAF5B;AAGI,IAAA,iBAAiB,EAAE,MAAMR,KAAK,CAACW,mBAAN,CAA0BX,KAAK,CAACE,eAAhC,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAYI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEF,KAAK,CAACE,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADR;AAeF,CAzBF;;AA0BA,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHX,IAAAA,eAAe,EAAGW,KAAK,CAACC,eADrB;AAEHN,IAAAA,gBAAgB,EAAGK,KAAK,CAACL,gBAFtB;AAGHP,IAAAA,SAAS,EAAGY,KAAK,CAACZ;AAHf,GAAP;AAKH,CAND;;AAQA,MAAMc,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHL,IAAAA,mBAAmB,EAAGM,OAAD,IAAaD,QAAQ,CAAClB,OAAO,CAACoB,cAAR,CAAuBD,OAAvB,CAAD,CADvC;AAEHd,IAAAA,YAAY,EAAC,MAAMa,QAAQ,CAAClB,OAAO,CAACqB,UAAR,EAAD,CAFxB;AAGHd,IAAAA,eAAe,EAAGe,UAAD,IAAgBJ,QAAQ,CAAClB,OAAO,CAACuB,aAAR,CAAsBD,UAAtB,CAAD;AAHtC,GAAP;AAKH,CAND;;AAQA,eAAe3B,OAAO,CAACmB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,IAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport RecipeModal from \"../../components/Recipe/RecipeModal/RecipeModal\"\nimport ItemsList from \"../../components/ItemsList/ItemsList\";\nimport NutritionLabel from \"../../components/NutritionLabel/NutritionLabel\";\nimport * as actions from \"../../Store/actions/productsList\";\n\nconst home = (props) =>{\n    \n    // const addName = (event) => \n    //     { console.log(props.recipeAsProduct.name )\n    //         return(\n    //         [...props.recipeAsProduct],\n    //         props.recipeAsProduct.name = event.target.value\n    //         )}\n    \n\n    return(\n            <>\n                <Modal show={props.showModal}>\n                    <RecipeModal\n                        recipe={props.recipeAsProduct}\n                        closeIconClicked={props.onCloseModal}\n                        addName={event => props.onAddRecipeName(event.target.value)}\n                        recipeItems={props.selectedProducts}/>\n                </Modal>\n                <ItemsList \n                    addProductClicked={() =>props.history.push(\"/productlist\")} \n                    selectedProducts={props.selectedProducts}\n                    saveRecipeClicked={() => props.onSaveRecipeClicked(props.recipeAsProduct)}/>\n                <NutritionLabel product={props.recipeAsProduct}/>\n            </>\n)}\nconst mapStateToProps = state => {\n    return {\n        recipeAsProduct : state.recipeNutrients,\n        selectedProducts : state.selectedProducts,\n        showModal : state.showModal\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSaveRecipeClicked :(product) => dispatch(actions.productClicked(product)),\n        onCloseModal:() => dispatch(actions.closeModal()),\n        onAddRecipeName: (recipeName) => dispatch(actions.addRecipeName(recipeName)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(home);"]},"metadata":{},"sourceType":"module"}