{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/components/Product/AddProductModal/AddProductModal.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport AddProductNutritionLabel from \"../../NutritionLabel/AddProductNutritionLabel/AddProductNutritionLabel\";\nimport Button from \"../../UI/Button/Button\";\nimport * as actions from \"../../../Store/actions\";\nimport Styles from \"./AddProductModal.module.css\";\n\nconst addProductModal = props => {\n  let addedProduct = {\n    name: \"\",\n    quantity: 100,\n    units: \"g\",\n    id: \"\",\n    totalNutrients: {\n      ENERC_KCAL: {\n        label: \"Energy\",\n        quantity: 0,\n        unit: \"kcal\"\n      },\n      FAT: {\n        label: \"Fat\",\n        quantity: 0,\n        unit: \"g\"\n      },\n      FASAT: {\n        label: \"Saturated\",\n        quantity: 0,\n        unit: \"g\"\n      },\n      FATRN: {\n        label: \"Trans\",\n        quantity: 0,\n        unit: \"g\"\n      },\n      CHOCDF: {\n        label: \"Carbs\",\n        quantity: 0,\n        unit: \"g\"\n      },\n      FIBTG: {\n        label: \"Fiber\",\n        quantity: 0,\n        unit: \"g\"\n      },\n      SUGAR: {\n        label: \"Sugars\",\n        quantity: 0,\n        unit: \"g\"\n      },\n      PROCNT: {\n        label: \"Protein\",\n        quantity: 0,\n        unit: \"g\"\n      },\n      CHOLE: {\n        label: \"Cholesterol\",\n        quantity: 0,\n        unit: \"mg\"\n      },\n      NA: {\n        label: \"Sodium\",\n        quantity: 0,\n        unit: \"mg\"\n      },\n      CA: {\n        label: \"Calcium\",\n        quantity: 0,\n        unit: \"mg\"\n      },\n      FE: {\n        label: \"Iron\",\n        quantity: 0,\n        unit: \"mg\"\n      },\n      VITA_RAE: {\n        label: \"Vitamin A\",\n        quantity: 0,\n        unit: \"Âµg\"\n      },\n      VITC: {\n        label: \"Vitamin C\",\n        quantity: 0,\n        unit: \"mg\"\n      }\n    }\n  };\n\n  const addName = event => {\n    addedProduct.name = event.target.value;\n  };\n\n  const addNutrients = event => {\n    addedProduct.totalNutrients[event.target.name].quantity = Number(event.target.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    props.onAddProduct(addedProduct, props.token, props.userId);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-times \".concat(Styles.CloseIcon),\n    onClick: props.closeIconClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: Styles.Name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Add New Product\"), React.createElement(AddProductNutritionLabel, {\n    addName: addName,\n    addNutrients: addNutrients,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    classname: \"Success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Add Product\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.auth.userId,\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddProduct: (product, token, userId) => dispatch(actions.addProduct(product, token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(addProductModal);","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/components/Product/AddProductModal/AddProductModal.js"],"names":["React","connect","AddProductNutritionLabel","Button","actions","Styles","addProductModal","props","addedProduct","name","quantity","units","id","totalNutrients","ENERC_KCAL","label","unit","FAT","FASAT","FATRN","CHOCDF","FIBTG","SUGAR","PROCNT","CHOLE","NA","CA","FE","VITA_RAE","VITC","addName","event","target","value","addNutrients","Number","onSubmit","preventDefault","onAddProduct","token","userId","CloseIcon","closeIconClicked","Name","mapStateToProps","state","auth","mapDispatchToProps","dispatch","product","addProduct"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport AddProductNutritionLabel from \"../../NutritionLabel/AddProductNutritionLabel/AddProductNutritionLabel\";\nimport Button from \"../../UI/Button/Button\";\nimport * as actions from \"../../../Store/actions\";\nimport Styles from \"./AddProductModal.module.css\";\n\nconst addProductModal = (props) => {\n\n    let addedProduct = {\n        name:\"\",\n        quantity:100,\n        units:\"g\",\n        id:\"\",\n        totalNutrients : {\n            ENERC_KCAL:{\n              label : \"Energy\",\n              quantity : 0,\n              unit : \"kcal\"\n            },\n            FAT : {\n              label : \"Fat\",\n              quantity : 0,\n              unit : \"g\"\n            },\n            FASAT : {\n              label : \"Saturated\",\n              quantity : 0,\n              unit : \"g\"\n            },\n            FATRN : {\n              label : \"Trans\",\n              quantity : 0,\n              unit : \"g\"\n            },\n            CHOCDF : {\n              label : \"Carbs\",\n              quantity : 0,\n              unit : \"g\"\n            },\n            FIBTG : {\n              label : \"Fiber\",\n              quantity : 0,\n              unit : \"g\"\n            },\n            SUGAR : {\n              label : \"Sugars\",\n              quantity : 0,\n              unit : \"g\"\n            },\n            PROCNT : {\n              label : \"Protein\",\n              quantity : 0,\n              unit : \"g\"\n            },\n            CHOLE : {\n              label : \"Cholesterol\",\n              quantity : 0,\n              unit : \"mg\"\n            },\n            NA : {\n              label : \"Sodium\",\n              quantity : 0,\n              unit : \"mg\"\n            },\n            CA:{\n              label:\"Calcium\",\n              quantity: 0,\n              unit:\"mg\"\n            },\n            FE:{\n              label:\"Iron\",\n              quantity:0,\n              unit:\"mg\"\n            },\n            VITA_RAE:{\n              label:\"Vitamin A\",\n              quantity:0,\n              unit:\"Âµg\"\n            },\n            VITC:{\n              label:\"Vitamin C\",\n              quantity:0,\n              unit:\"mg\"\n          }\n        }\n    }\n\n    const addName = (event) => {\n        addedProduct.name = event.target.value\n    }\n\n    const addNutrients = (event) => {\n        addedProduct.totalNutrients[event.target.name].quantity = Number(event.target.value)\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        props.onAddProduct(addedProduct, props.token, props.userId)\n    }\n    return(\n        <form onSubmit={onSubmit}>\n            <i className={`fas fa-times ${Styles.CloseIcon}`} onClick={props.closeIconClicked}></i>\n            <div className={Styles.Name}>Add New Product</div>\n            <AddProductNutritionLabel addName={addName} addNutrients={addNutrients}/>\n            <div>\n                <Button type=\"submit\" classname=\"Success\">Add Product</Button>\n            </div>   \n        </form> \n)}\n\nconst mapStateToProps = state => {\n  return {\n    userId : state.auth.userId,\n    token: state.auth.token\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      onAddProduct:(product, token, userId) => dispatch(actions.addProduct(product, token, userId))\n    }\n  }\n\nexport default connect(mapStateToProps,mapDispatchToProps)(addProductModal);"]},"metadata":{},"sourceType":"module"}