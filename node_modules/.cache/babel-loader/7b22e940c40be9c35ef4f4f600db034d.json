{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Auth/Auth.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"../../components/UI/Button/Button\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Auth.module.css\";\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      existingUser: false,\n      password: \"\",\n      email: \"\",\n      repeatedPassword: \"\",\n      passwordMatch: true\n    };\n\n    this.existingUserHandler = () => {\n      this.setState({\n        existingUser: !this.state.existingUser\n      });\n    };\n\n    this.emailHandler = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.passwordHandler = event => {\n      console.log(event);\n      console.log(event.target);\n\n      if (event.target.placeholder === \"Password\") {\n        this.setState({\n          password: event.target.value\n        });\n      } else if (event.target.placeholder === \"Repeat Password\") {\n        this.setState({\n          repeatedPassword: event.target.value\n        });\n      }\n    };\n\n    this.checkPassword = errorMessage => {\n      if (this.state.password !== this.state.repeatedPassword) {\n        this.setState({\n          passwordMatch: false\n        });\n      }\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = React.createElement(\"p\", {\n        className: Styles.ErrorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.props.error.message);\n    }\n\n    if (!this.state.passwordMatch) {\n      errorMessage = React.createElement(\"p\", {\n        className: Styles.ErrorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Password Doese Not Match\");\n    }\n\n    let form = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: Styles.Name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Login\"), errorMessage, React.createElement(\"form\", {\n      className: Styles.Form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"E-mail\",\n      onChange: this.emailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: this.passwordHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: Styles.ButtonsDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Button, {\n      classname: \"Success\",\n      onclick: () => this.props.onAuth(this.state.email, this.state.password, this.state.existingUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Button, {\n      classname: \"Neutral\",\n      onclick: () => {\n        this.existingUserHandler();\n        this.props.switchForm();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Sign Up\")));\n\n    if (!this.state.existingUser) {\n      form = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: Styles.Name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Sign Up\"), errorMessage, React.createElement(\"form\", {\n        className: Styles.Form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"E-mail\",\n        onChange: this.emailHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: event => {\n          this.passwordHandler(event);\n          this.checkPassword();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Repeat Password\",\n        onChange: event => {\n          this.passwordHandler(event);\n          this.checkPassword();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: Styles.ButtonsDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Button, {\n        classname: \"Success\",\n        onclick: () => this.props.onAuth(this.state.email, this.state.password, this.state.existingUser),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(Button, {\n        classname: \"Neutral\",\n        onclick: () => {\n          this.existingUserHandler();\n          this.props.switchForm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Login\")));\n    }\n\n    return React.createElement(React.Fragment, null, form);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Auth/Auth.js"],"names":["React","Component","connect","Button","actions","Styles","Auth","state","existingUser","password","email","repeatedPassword","passwordMatch","existingUserHandler","setState","emailHandler","event","target","value","passwordHandler","console","log","placeholder","checkPassword","errorMessage","render","props","error","ErrorMessage","message","form","Name","Form","ButtonsDiv","onAuth","switchForm","mapStateToProps","auth","mapDispatchToProps","dispatch","isSignUp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBM,KADyB,GACjB;AACJC,MAAAA,YAAY,EAAC,KADT;AAEJC,MAAAA,QAAQ,EAAC,EAFL;AAGJC,MAAAA,KAAK,EAAC,EAHF;AAIJC,MAAAA,gBAAgB,EAAE,EAJd;AAKJC,MAAAA,aAAa,EAAE;AALX,KADiB;;AAAA,SASzBC,mBATyB,GASH,MAAM;AACxB,WAAKC,QAAL,CAAc;AAACN,QAAAA,YAAY,EAAC,CAAC,KAAKD,KAAL,CAAWC;AAA1B,OAAd;AACH,KAXwB;;AAAA,SAazBO,YAbyB,GAaTC,KAAD,IAAW;AACtB,WAAKF,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAEM,KAAK,CAACC,MAAN,CAAaC;AAArB,OAAd;AACH,KAfwB;;AAAA,SAiBzBC,eAjByB,GAiBNH,KAAD,IAAW;AACzBI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACC,MAAlB;;AACA,UAAID,KAAK,CAACC,MAAN,CAAaK,WAAb,KAA6B,UAAjC,EAA4C;AACxC,aAAKR,QAAL,CAAc;AAACL,UAAAA,QAAQ,EAAGO,KAAK,CAACC,MAAN,CAAaC;AAAzB,SAAd;AACH,OAFD,MAEO,IAAIF,KAAK,CAACC,MAAN,CAAaK,WAAb,KAA6B,iBAAjC,EAAoD;AACvD,aAAKR,QAAL,CAAc;AAACH,UAAAA,gBAAgB,EAAGK,KAAK,CAACC,MAAN,CAAaC;AAAjC,SAAd;AACH;AACJ,KAzBwB;;AAAA,SA2BzBK,aA3ByB,GA2BRC,YAAD,IAAkB;AAC9B,UAAG,KAAKjB,KAAL,CAAWE,QAAX,KAAwB,KAAKF,KAAL,CAAWI,gBAAtC,EAAuD;AACnD,aAAKG,QAAL,CAAc;AAACF,UAAAA,aAAa,EAAE;AAAhB,SAAd;AACH;AACJ,KA/BwB;AAAA;;AAkCzBa,EAAAA,MAAM,GAAE;AAEJ,QAAID,YAAY,GAAG,IAAnB;;AAEA,QAAI,KAAKE,KAAL,CAAWC,KAAf,EAAsB;AAClBH,MAAAA,YAAY,GAAG;AAAG,QAAA,SAAS,EAAEnB,MAAM,CAACuB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoC,KAAKF,KAAL,CAAWC,KAAX,CAAiBE,OAArD,CAAf;AACH;;AAED,QAAI,CAAC,KAAKtB,KAAL,CAAWK,aAAhB,EAA+B;AAC3BY,MAAAA,YAAY,GAAG;AAAG,QAAA,SAAS,EAAEnB,MAAM,CAACuB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAf;AACH;;AAED,QAAIE,IAAI,GACR,0CACI;AAAK,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEKP,YAFL,EAGI;AAAM,MAAA,SAAS,EAAEnB,MAAM,CAAC2B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,QAA/B;AAAwC,MAAA,QAAQ,EAAE,KAAKjB,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,WAAW,EAAC,UAAnC;AAA8C,MAAA,QAAQ,EAAE,KAAKI,eAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAHJ,EAOI;AAAK,MAAA,SAAS,EAAEd,MAAM,CAAC4B,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAM,KAAKP,KAAL,CAAWQ,MAAX,CAAkB,KAAK3B,KAAL,CAAWG,KAA7B,EAAoC,KAAKH,KAAL,CAAWE,QAA/C,EAAyD,KAAKF,KAAL,CAAWC,YAApE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKK,mBAAL;AAA4B,aAAKa,KAAL,CAAWS,UAAX;AAAwB,OAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CAPJ,CADA;;AAcA,QAAG,CAAC,KAAK5B,KAAL,CAAWC,YAAf,EAA6B;AACzBsB,MAAAA,IAAI,GACJ,0CACI;AAAK,QAAA,SAAS,EAAEzB,MAAM,CAAC0B,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEKP,YAFL,EAGI;AAAM,QAAA,SAAS,EAAEnB,MAAM,CAAC2B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,QAAQ,EAAE,KAAKjB,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,WAAW,EAAC,UAAnC;AAA8C,QAAA,QAAQ,EAAGC,KAAD,IAAW;AAAC,eAAKG,eAAL,CAAqBH,KAArB;AAA6B,eAAKO,aAAL;AAAqB,SAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,WAAW,EAAC,iBAAnC;AAAqD,QAAA,QAAQ,EAAGP,KAAD,IAAW;AAAC,eAAKG,eAAL,CAAqBH,KAArB;AAA6B,eAAKO,aAAL;AAAqB,SAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAHJ,EAQI;AAAK,QAAA,SAAS,EAAElB,MAAM,CAAC4B,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAE,MAAM,KAAKP,KAAL,CAAWQ,MAAX,CAAkB,KAAK3B,KAAL,CAAWG,KAA7B,EAAoC,KAAKH,KAAL,CAAWE,QAA/C,EAAyD,KAAKF,KAAL,CAAWC,YAApE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKK,mBAAL;AAA4B,eAAKa,KAAL,CAAWS,UAAX;AAAwB,SAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CARJ,CADA;AAcH;;AACD,WACI,0CAAGL,IAAH,CADJ;AAGH;;AA/EwB;;AAkF7B,MAAMM,eAAe,GAAG7B,KAAK,IAAI;AAC7B,SAAO;AACHoB,IAAAA,KAAK,EAAEpB,KAAK,CAAC8B,IAAN,CAAWV;AADf,GAAP;AAGH,CAJD;;AAMA,MAAMW,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHL,IAAAA,MAAM,EAAE,CAACxB,KAAD,EAAQD,QAAR,EAAkB+B,QAAlB,KAA+BD,QAAQ,CAACnC,OAAO,CAACiC,IAAR,CAAa3B,KAAb,EAAoBD,QAApB,EAA8B+B,QAA9B,CAAD;AAD5C,GAAP;AAGH,CAJD;;AAMA,eAAetC,OAAO,CAACkC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChC,IAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"../../components/UI/Button/Button\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Auth.module.css\";\n\n\nclass Auth extends Component {\n    state = {\n        existingUser:false,\n        password:\"\",\n        email:\"\",\n        repeatedPassword: \"\",\n        passwordMatch: true\n    }\n\n    existingUserHandler = () => {\n        this.setState({existingUser:!this.state.existingUser})\n    }\n\n    emailHandler = (event) => {\n        this.setState({email: event.target.value})\n    }\n\n    passwordHandler = (event) => {\n        console.log(event);\n        console.log(event.target);\n        if (event.target.placeholder === \"Password\"){\n            this.setState({password : event.target.value});\n        } else if (event.target.placeholder === \"Repeat Password\") {\n            this.setState({repeatedPassword : event.target.value});\n        }\n    }\n\n    checkPassword = (errorMessage) => {\n        if(this.state.password !== this.state.repeatedPassword){\n            this.setState({passwordMatch: false})\n        }\n    }\n\n\n    render(){\n\n        let errorMessage = null\n\n        if (this.props.error) {\n            errorMessage = <p className={Styles.ErrorMessage}>{this.props.error.message}</p>\n        }\n\n        if (!this.state.passwordMatch) {\n            errorMessage = <p className={Styles.ErrorMessage}>Password Doese Not Match</p>\n        }\n\n        let form = \n        <>\n            <div className={Styles.Name}>Login</div>\n            {errorMessage}\n            <form className={Styles.Form}>\n                <input type=\"text\" placeholder=\"E-mail\" onChange={this.emailHandler}/>\n                <input type=\"password\" placeholder=\"Password\" onChange={this.passwordHandler}/>\n            </form>\n            <div className={Styles.ButtonsDiv}>\n                <Button classname=\"Success\" onclick={() => this.props.onAuth(this.state.email, this.state.password, this.state.existingUser)}>Submit</Button>\n                <Button classname=\"Neutral\" onclick={() => {this.existingUserHandler(); this.props.switchForm()}}>Sign Up</Button>\n            </div>   \n        </>\n        \n        if(!this.state.existingUser) {\n            form = \n            <>\n                <div className={Styles.Name}>Sign Up</div>\n                {errorMessage}\n                <form className={Styles.Form}>\n                    <input type=\"text\" placeholder=\"E-mail\" onChange={this.emailHandler}/>\n                    <input type=\"password\" placeholder=\"Password\" onChange={(event) => {this.passwordHandler(event); this.checkPassword()}}/>\n                    <input type=\"password\" placeholder=\"Repeat Password\" onChange={(event) => {this.passwordHandler(event); this.checkPassword()}}/>\n                </form>\n                <div className={Styles.ButtonsDiv}>\n                    <Button classname=\"Success\" onclick={() => this.props.onAuth(this.state.email, this.state.password, this.state.existingUser)}>Submit</Button>\n                    <Button classname=\"Neutral\" onclick={() => {this.existingUserHandler(); this.props.switchForm()}}>Login</Button>\n                </div>   \n            </>\n        }\n        return(\n            <>{form}</>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        error: state.auth.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp))\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);"]},"metadata":{},"sourceType":"module"}