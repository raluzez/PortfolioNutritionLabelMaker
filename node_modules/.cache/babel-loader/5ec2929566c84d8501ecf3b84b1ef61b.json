{"ast":null,"code":"import _objectSpread from \"/home/lukas/Desktop/projects/nutrition-label-maker/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  products: [],\n  selectedProducts: [],\n  clickedProduct: \"\",\n  showModal: false,\n  recipeNutrients: {\n    name: \"\",\n    quantity: 0,\n    units: \"g\",\n    totalNutrients: {\n      ENERC_KCAL: {\n        quantity: 0\n      },\n      FAT: {\n        quantity: 0\n      },\n      FASAT: {\n        quantity: 0\n      },\n      FATRN: {\n        quantity: 0\n      },\n      CHOCDF: {\n        quantity: 0\n      },\n      FIBTG: {\n        quantity: 0\n      },\n      SUGAR: {\n        quantity: 0\n      },\n      PROCNT: {\n        quantity: 0\n      },\n      CHOLE: {\n        quantity: 0\n      },\n      NA: {\n        quantity: 0\n      },\n      CA: {\n        quantity: 0\n      },\n      FE: {\n        quantity: 0\n      },\n      VITA_RAE: {\n        quantity: 0\n      },\n      VITC: {\n        quantity: 0\n      }\n    }\n  },\n  loading: false\n};\n\nconst addToRecipeNutrients = (state, productNutrients, amountOfProduct) => {\n  let totalRecipes = state.recipeNutrients.totalNutrients;\n  Object.keys(totalRecipes).map(key => {\n    const newNutrient = totalRecipes[key].quantity += productNutrients[key].quantity / 100 * amountOfProduct;\n    return _objectSpread({}, totalRecipes[key], {\n      newNutrient\n    });\n  });\n  return totalRecipes;\n};\n\nconst addToRecipeAmount = (state, amount) => {\n  return state.recipeNutrients.quantity + Number(amount);\n};\n\nconst deleteFromRecipeNutrients = (state, productNutrients, amountOfProduct) => {\n  let totalRecipes = _objectSpread({}, state.recipeNutrients.totalNutrients);\n\n  Object.keys(totalRecipes).map(key => {\n    const newNutrient = totalRecipes[key].quantity -= productNutrients[key].quantity / 100 * amountOfProduct;\n    return _objectSpread({}, totalRecipes[key], {\n      newNutrient\n    });\n  });\n  return totalRecipes;\n};\n\nconst deleteFromRecipeAmount = (state, amount) => state.recipeNutrients.quantity - Number(amount);\n\nconst changeProductAmount = (state, product, amount) => {\n  const allProducts = [...state.selectedProducts];\n  return allProducts.map(item => {\n    if (item.name === product.name) {\n      return _objectSpread({}, item, {\n        quantity: Number(amount)\n      });\n    }\n\n    return item;\n  });\n};\n\nconst changeTotalAmount = selectedProducts => {\n  let quantity = 0;\n  selectedProducts.map(item => {\n    return quantity += Number(item.quantity);\n  });\n  return quantity;\n};\n\nconst changeTotalNutreants = (state, product, amountOfProduct) => {\n  let totalRecipes = _objectSpread({}, state.recipeNutrients.totalNutrients);\n\n  let oldAmount = 0;\n  state.selectedProducts.map(item => {\n    if (item.name === product.name) {\n      return oldAmount = item.quantity;\n    }\n\n    return oldAmount;\n  });\n  Object.keys(totalRecipes).map(key => {\n    let newNutrient = 0;\n    newNutrient = totalRecipes[key].quantity -= product.totalNutrients[key].quantity / 100 * oldAmount;\n    newNutrient = totalRecipes[key].quantity += product.totalNutrients[key].quantity / 100 * amountOfProduct;\n    return _objectSpread({}, totalRecipes[key], {\n      newNutrient\n    });\n  });\n  return totalRecipes;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SELECT_PRODUCT:\n      action.product.quantity = Number(action.amount);\n      return _objectSpread({}, state, {\n        selectedProducts: state.selectedProducts.concat(action.product),\n        showModal: false,\n        recipeNutrients: _objectSpread({}, state.recipeNutrients, {\n          totalNutrients: addToRecipeNutrients(state, action.product.totalNutrients, action.product.quantity),\n          quantity: addToRecipeAmount(state, action.product.quantity)\n        })\n      });\n\n    case actionTypes.DELETE_PRODUCT:\n      return _objectSpread({}, state, {\n        selectedProducts: state.selectedProducts.filter(product => action.productName !== product.name),\n        recipeNutrients: _objectSpread({}, state.recipeNutrients, {\n          totalNutrients: deleteFromRecipeNutrients(state, action.product.totalNutrients, action.product.quantity),\n          quantity: deleteFromRecipeAmount(state, action.product.quantity)\n        })\n      });\n\n    case actionTypes.CLICKED_PRODUCT:\n      return _objectSpread({}, state, {\n        clickedProduct: action.product,\n        showModal: true\n      });\n\n    case actionTypes.CHANGE_AMOUNT:\n      const selectedProducts = changeProductAmount(state, action.product, action.amount);\n      const totalNutrients = changeTotalNutreants(state, action.product, action.amount);\n      const quantity = changeTotalAmount(selectedProducts);\n      return _objectSpread({}, state, {\n        selectedProducts,\n        recipeNutrients: _objectSpread({}, state.recipeNutrients, {\n          totalNutrients,\n          quantity\n        })\n      });\n\n    case actionTypes.ADD_PRODUCT_START:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case actionTypes.ADD_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    case actionTypes.ADD_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        products: state.products.concat(action.product),\n        showModal: false,\n        loading: false\n      });\n\n    case actionTypes.FETCH_PRODUCTS_START:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case actionTypes.FETCH_PRODUCTS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    case actionTypes.FETCH_PRODUCTS_SUCCESS:\n      return _objectSpread({}, state, {\n        products: action.products,\n        loading: false\n      });\n\n    case actionTypes.DELETE_PRODUCT_START:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case actionTypes.DELETE_PRODUCT_FAIL:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    case actionTypes.DELETE_PRODUCT_SUCCESS:\n      return _objectSpread({}, state, {\n        selectedProducts: state.selectedProducts.filter(product => action.productKey !== product.key),\n        loading: false\n      });\n\n    case actionTypes.CLOSE_MODAL:\n      return _objectSpread({}, state, {\n        showModal: false,\n        clickedProduct: \"\"\n      });\n\n    case actionTypes.OPEN_MODAL:\n      return _objectSpread({}, state, {\n        showModal: true\n      });\n\n    case actionTypes.ADD_RECIPE_NAME:\n      return _objectSpread({}, state, {\n        recipeNutrients: _objectSpread({}, state.recipeNutrients, {\n          name: action.recipeName\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/Store/reducers/productsList.js"],"names":["actionTypes","initialState","products","selectedProducts","clickedProduct","showModal","recipeNutrients","name","quantity","units","totalNutrients","ENERC_KCAL","FAT","FASAT","FATRN","CHOCDF","FIBTG","SUGAR","PROCNT","CHOLE","NA","CA","FE","VITA_RAE","VITC","loading","addToRecipeNutrients","state","productNutrients","amountOfProduct","totalRecipes","Object","keys","map","key","newNutrient","addToRecipeAmount","amount","Number","deleteFromRecipeNutrients","deleteFromRecipeAmount","changeProductAmount","product","allProducts","item","changeTotalAmount","changeTotalNutreants","oldAmount","reducer","action","type","SELECT_PRODUCT","concat","DELETE_PRODUCT","filter","productName","CLICKED_PRODUCT","CHANGE_AMOUNT","ADD_PRODUCT_START","ADD_PRODUCT_FAIL","ADD_PRODUCT_SUCCESS","FETCH_PRODUCTS_START","FETCH_PRODUCTS_FAIL","FETCH_PRODUCTS_SUCCESS","DELETE_PRODUCT_START","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_SUCCESS","productKey","CLOSE_MODAL","OPEN_MODAL","ADD_RECIPE_NAME","recipeName"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC,EADQ;AAEjBC,EAAAA,gBAAgB,EAAC,EAFA;AAGjBC,EAAAA,cAAc,EAAE,EAHC;AAIjBC,EAAAA,SAAS,EAAC,KAJO;AAKjBC,EAAAA,eAAe,EAAG;AACVC,IAAAA,IAAI,EAAG,EADG;AAEVC,IAAAA,QAAQ,EAAG,CAFD;AAGVC,IAAAA,KAAK,EAAG,GAHE;AAIVC,IAAAA,cAAc,EAAG;AACbC,MAAAA,UAAU,EAAG;AAACH,QAAAA,QAAQ,EAAG;AAAZ,OADA;AAEbI,MAAAA,GAAG,EAAG;AAACJ,QAAAA,QAAQ,EAAG;AAAZ,OAFO;AAGbK,MAAAA,KAAK,EAAG;AAACL,QAAAA,QAAQ,EAAG;AAAZ,OAHK;AAIbM,MAAAA,KAAK,EAAG;AAACN,QAAAA,QAAQ,EAAG;AAAZ,OAJK;AAKbO,MAAAA,MAAM,EAAG;AAACP,QAAAA,QAAQ,EAAG;AAAZ,OALI;AAMbQ,MAAAA,KAAK,EAAG;AAACR,QAAAA,QAAQ,EAAG;AAAZ,OANK;AAObS,MAAAA,KAAK,EAAG;AAACT,QAAAA,QAAQ,EAAG;AAAZ,OAPK;AAQbU,MAAAA,MAAM,EAAG;AAACV,QAAAA,QAAQ,EAAG;AAAZ,OARI;AASbW,MAAAA,KAAK,EAAG;AAACX,QAAAA,QAAQ,EAAG;AAAZ,OATK;AAUbY,MAAAA,EAAE,EAAG;AAACZ,QAAAA,QAAQ,EAAG;AAAZ,OAVQ;AAWba,MAAAA,EAAE,EAAG;AAACb,QAAAA,QAAQ,EAAE;AAAX,OAXQ;AAYbc,MAAAA,EAAE,EAAG;AAACd,QAAAA,QAAQ,EAAE;AAAX,OAZQ;AAabe,MAAAA,QAAQ,EAAG;AAACf,QAAAA,QAAQ,EAAG;AAAZ,OAbE;AAcbgB,MAAAA,IAAI,EAAG;AAAChB,QAAAA,QAAQ,EAAG;AAAZ;AAdM;AAJP,GALD;AA0BjBiB,EAAAA,OAAO,EAAE;AA1BQ,CAArB;;AA+BA,MAAMC,oBAAoB,GAAG,CAACC,KAAD,EAAQC,gBAAR,EAA0BC,eAA1B,KAA8C;AACvE,MAAIC,YAAY,GAAGH,KAAK,CAACrB,eAAN,CAAsBI,cAAzC;AACAqB,EAAAA,MAAM,CAACC,IAAP,CAAYF,YAAZ,EAA0BG,GAA1B,CAA+BC,GAAD,IAAS;AACnC,UAAMC,WAAW,GAAGL,YAAY,CAACI,GAAD,CAAZ,CAAkB1B,QAAlB,IAA+BoB,gBAAgB,CAACM,GAAD,CAAhB,CAAsB1B,QAAtB,GAA+B,GAAhC,GAAqCqB,eAAvF;AACA,6BAAWC,YAAY,CAACI,GAAD,CAAvB;AAA8BC,MAAAA;AAA9B;AACH,GAHD;AAIA,SAAOL,YAAP;AACH,CAPD;;AASA,MAAMM,iBAAiB,GAAG,CAACT,KAAD,EAAOU,MAAP,KAAkB;AACxC,SAAOV,KAAK,CAACrB,eAAN,CAAsBE,QAAtB,GAAiC8B,MAAM,CAACD,MAAD,CAA9C;AACH,CAFD;;AAIA,MAAME,yBAAyB,GAAG,CAACZ,KAAD,EAAQC,gBAAR,EAA0BC,eAA1B,KAA8C;AAC5E,MAAIC,YAAY,qBAAOH,KAAK,CAACrB,eAAN,CAAsBI,cAA7B,CAAhB;;AACAqB,EAAAA,MAAM,CAACC,IAAP,CAAYF,YAAZ,EAA0BG,GAA1B,CAA+BC,GAAD,IAAS;AACnC,UAAMC,WAAW,GAAGL,YAAY,CAACI,GAAD,CAAZ,CAAkB1B,QAAlB,IAA+BoB,gBAAgB,CAACM,GAAD,CAAhB,CAAsB1B,QAAtB,GAA+B,GAAhC,GAAqCqB,eAAvF;AACA,6BAAWC,YAAY,CAACI,GAAD,CAAvB;AAA8BC,MAAAA;AAA9B;AACH,GAHD;AAIA,SAAOL,YAAP;AACH,CAPD;;AASA,MAAMU,sBAAsB,GAAG,CAACb,KAAD,EAAQU,MAAR,KAC3BV,KAAK,CAACrB,eAAN,CAAsBE,QAAtB,GAAiC8B,MAAM,CAACD,MAAD,CAD3C;;AAIA,MAAMI,mBAAmB,GAAG,CAACd,KAAD,EAAQe,OAAR,EAAiBL,MAAjB,KAA4B;AACpD,QAAMM,WAAW,GAAG,CAAC,GAAGhB,KAAK,CAACxB,gBAAV,CAApB;AACA,SAAOwC,WAAW,CAACV,GAAZ,CAAgBW,IAAI,IAAI;AAC3B,QAAIA,IAAI,CAACrC,IAAL,KAAcmC,OAAO,CAACnC,IAA1B,EAAgC;AAC5B,+BAAWqC,IAAX;AAAiBpC,QAAAA,QAAQ,EAAE8B,MAAM,CAACD,MAAD;AAAjC;AACH;;AACD,WAAOO,IAAP;AACH,GALM,CAAP;AAMH,CARD;;AASC,MAAMC,iBAAiB,GAAI1C,gBAAD,IAAsB;AAC5C,MAAIK,QAAQ,GAAG,CAAf;AACAL,EAAAA,gBAAgB,CAAC8B,GAAjB,CAAqBW,IAAI,IAAI;AACzB,WAAOpC,QAAQ,IAAI8B,MAAM,CAACM,IAAI,CAACpC,QAAN,CAAzB;AACH,GAFD;AAGA,SAAOA,QAAP;AACH,CAND;;AAQD,MAAMsC,oBAAoB,GAAG,CAACnB,KAAD,EAAQe,OAAR,EAAiBb,eAAjB,KAAqC;AAC9D,MAAIC,YAAY,qBAAOH,KAAK,CAACrB,eAAN,CAAsBI,cAA7B,CAAhB;;AACA,MAAIqC,SAAS,GAAG,CAAhB;AACApB,EAAAA,KAAK,CAACxB,gBAAN,CAAuB8B,GAAvB,CAA2BW,IAAI,IAAG;AAC9B,QAAGA,IAAI,CAACrC,IAAL,KAAcmC,OAAO,CAACnC,IAAzB,EAA8B;AAC1B,aAAOwC,SAAS,GAAGH,IAAI,CAACpC,QAAxB;AACH;;AACD,WAAOuC,SAAP;AACH,GALD;AAMAhB,EAAAA,MAAM,CAACC,IAAP,CAAYF,YAAZ,EAA0BG,GAA1B,CAA+BC,GAAD,IAAS;AACnC,QAAIC,WAAW,GAAG,CAAlB;AACAA,IAAAA,WAAW,GAAGL,YAAY,CAACI,GAAD,CAAZ,CAAkB1B,QAAlB,IAA+BkC,OAAO,CAAChC,cAAR,CAAuBwB,GAAvB,EAA4B1B,QAA5B,GAAqC,GAAtC,GAA2CuC,SAAvF;AACAZ,IAAAA,WAAW,GAAGL,YAAY,CAACI,GAAD,CAAZ,CAAkB1B,QAAlB,IAA+BkC,OAAO,CAAChC,cAAR,CAAuBwB,GAAvB,EAA4B1B,QAA5B,GAAqC,GAAtC,GAA2CqB,eAAvF;AACA,6BAAWC,YAAY,CAACI,GAAD,CAAvB;AAA8BC,MAAAA;AAA9B;AACH,GALD;AAMA,SAAOL,YAAP;AACC,CAhBL;;AAkBA,MAAMkB,OAAO,GAAG,CAACrB,KAAK,GAAG1B,YAAT,EAAuBgD,MAAvB,KAAkC;AAE9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlD,WAAW,CAACmD,cAAjB;AACIF,MAAAA,MAAM,CAACP,OAAP,CAAelC,QAAf,GAA0B8B,MAAM,CAACW,MAAM,CAACZ,MAAR,CAAhC;AACA,+BACOV,KADP;AAEIxB,QAAAA,gBAAgB,EAAEwB,KAAK,CAACxB,gBAAN,CAAuBiD,MAAvB,CAA8BH,MAAM,CAACP,OAArC,CAFtB;AAGIrC,QAAAA,SAAS,EAAC,KAHd;AAIIC,QAAAA,eAAe,oBACRqB,KAAK,CAACrB,eADE;AAEXI,UAAAA,cAAc,EAAGgB,oBAAoB,CAACC,KAAD,EAAQsB,MAAM,CAACP,OAAP,CAAehC,cAAvB,EAAuCuC,MAAM,CAACP,OAAP,CAAelC,QAAtD,CAF1B;AAGXA,UAAAA,QAAQ,EAAG4B,iBAAiB,CAACT,KAAD,EAAQsB,MAAM,CAACP,OAAP,CAAelC,QAAvB;AAHjB;AAJnB;;AAUJ,SAAKR,WAAW,CAACqD,cAAjB;AACI,+BACO1B,KADP;AAEIxB,QAAAA,gBAAgB,EAAEwB,KAAK,CAACxB,gBAAN,CAAuBmD,MAAvB,CAA8BZ,OAAO,IAAIO,MAAM,CAACM,WAAP,KAAuBb,OAAO,CAACnC,IAAxE,CAFtB;AAGID,QAAAA,eAAe,oBACRqB,KAAK,CAACrB,eADE;AAEXI,UAAAA,cAAc,EAAG6B,yBAAyB,CAACZ,KAAD,EAAQsB,MAAM,CAACP,OAAP,CAAehC,cAAvB,EAAuCuC,MAAM,CAACP,OAAP,CAAelC,QAAtD,CAF/B;AAGXA,UAAAA,QAAQ,EAAGgC,sBAAsB,CAACb,KAAD,EAAQsB,MAAM,CAACP,OAAP,CAAelC,QAAvB;AAHtB;AAHnB;;AASJ,SAAKR,WAAW,CAACwD,eAAjB;AACI,+BACO7B,KADP;AAEIvB,QAAAA,cAAc,EAAE6C,MAAM,CAACP,OAF3B;AAGIrC,QAAAA,SAAS,EAAC;AAHd;;AAKJ,SAAKL,WAAW,CAACyD,aAAjB;AACI,YAAMtD,gBAAgB,GAAGsC,mBAAmB,CAACd,KAAD,EAAQsB,MAAM,CAACP,OAAf,EAAwBO,MAAM,CAACZ,MAA/B,CAA5C;AACA,YAAM3B,cAAc,GAAGoC,oBAAoB,CAACnB,KAAD,EAAQsB,MAAM,CAACP,OAAf,EAAwBO,MAAM,CAACZ,MAA/B,CAA3C;AACA,YAAM7B,QAAQ,GAAGqC,iBAAiB,CAAC1C,gBAAD,CAAlC;AACA,+BACOwB,KADP;AAEIxB,QAAAA,gBAFJ;AAGIG,QAAAA,eAAe,oBACRqB,KAAK,CAACrB,eADE;AAEXI,UAAAA,cAFW;AAGXF,UAAAA;AAHW;AAHnB;;AASJ,SAAKR,WAAW,CAAC0D,iBAAjB;AACI,+BACK/B,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIJ,SAAKzB,WAAW,CAAC2D,gBAAjB;AACI,+BACKhC,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIJ,SAAKzB,WAAW,CAAC4D,mBAAjB;AACI,+BACOjC,KADP;AAEIzB,QAAAA,QAAQ,EAAEyB,KAAK,CAACzB,QAAN,CAAekD,MAAf,CAAsBH,MAAM,CAACP,OAA7B,CAFd;AAGIrC,QAAAA,SAAS,EAAC,KAHd;AAIIoB,QAAAA,OAAO,EAAE;AAJb;;AAMJ,SAAKzB,WAAW,CAAC6D,oBAAjB;AACI,+BACKlC,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIJ,SAAKzB,WAAW,CAAC8D,mBAAjB;AACI,+BACKnC,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIJ,SAAKzB,WAAW,CAAC+D,sBAAjB;AACI,+BACKpC,KADL;AAEEzB,QAAAA,QAAQ,EAAE+C,MAAM,CAAC/C,QAFnB;AAGEuB,QAAAA,OAAO,EAAE;AAHX;;AAKJ,SAAKzB,WAAW,CAACgE,oBAAjB;AACI,+BACOrC,KADP;AAEIF,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKzB,WAAW,CAACiE,mBAAjB;AACI,+BACOtC,KADP;AAEIF,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKzB,WAAW,CAACkE,sBAAjB;AACI,+BACOvC,KADP;AAEIxB,QAAAA,gBAAgB,EAAEwB,KAAK,CAACxB,gBAAN,CAAuBmD,MAAvB,CAA8BZ,OAAO,IAAIO,MAAM,CAACkB,UAAP,KAAsBzB,OAAO,CAACR,GAAvE,CAFtB;AAGIT,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKzB,WAAW,CAACoE,WAAjB;AACI,+BACOzC,KADP;AAEItB,QAAAA,SAAS,EAAC,KAFd;AAGID,QAAAA,cAAc,EAAE;AAHpB;;AAKF,SAAKJ,WAAW,CAACqE,UAAjB;AACI,+BACO1C,KADP;AAEItB,QAAAA,SAAS,EAAC;AAFd;;AAIN,SAAKL,WAAW,CAACsE,eAAjB;AACE,+BACK3C,KADL;AAEErB,QAAAA,eAAe,oBACVqB,KAAK,CAACrB,eADI;AAEbC,UAAAA,IAAI,EAAE0C,MAAM,CAACsB;AAFA;AAFjB;;AAOF;AAAS,aAAO5C,KAAP;AA9Gb;AAgHH,CAlHD;;AAoHA,eAAeqB,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n    products:[],\n    selectedProducts:[],\n    clickedProduct: \"\",\n    showModal:false,\n    recipeNutrients : {   \n            name : \"\",\n            quantity : 0,\n            units : \"g\",\n            totalNutrients : {\n                ENERC_KCAL : {quantity : 0},\n                FAT : {quantity : 0},\n                FASAT : {quantity : 0},\n                FATRN : {quantity : 0},\n                CHOCDF : {quantity : 0},\n                FIBTG : {quantity : 0},\n                SUGAR : {quantity : 0},\n                PROCNT : {quantity : 0},\n                CHOLE : {quantity : 0},\n                NA : {quantity : 0},\n                CA : {quantity: 0},\n                FE : {quantity: 0},\n                VITA_RAE : {quantity : 0},\n                VITC : {quantity : 0}\n            }\n    },\n    loading: false\n}\n\n\n\nconst addToRecipeNutrients = (state, productNutrients, amountOfProduct) => {\n    let totalRecipes = state.recipeNutrients.totalNutrients\n    Object.keys(totalRecipes).map((key) => {\n        const newNutrient = totalRecipes[key].quantity += (productNutrients[key].quantity/100)*amountOfProduct\n        return {...totalRecipes[key], newNutrient}\n    })\n    return totalRecipes\n}\n\nconst addToRecipeAmount = (state,amount) => {\n    return state.recipeNutrients.quantity + Number(amount)\n}\n\nconst deleteFromRecipeNutrients = (state, productNutrients, amountOfProduct) => {\n    let totalRecipes = {...state.recipeNutrients.totalNutrients}\n    Object.keys(totalRecipes).map((key) => {\n        const newNutrient = totalRecipes[key].quantity -= (productNutrients[key].quantity/100)*amountOfProduct\n        return {...totalRecipes[key], newNutrient}\n    })\n    return totalRecipes\n}\n\nconst deleteFromRecipeAmount = (state, amount) => (\n    state.recipeNutrients.quantity - Number(amount)\n)\n\nconst changeProductAmount = (state, product, amount) => {\n    const allProducts = [...state.selectedProducts]\n    return allProducts.map(item => {\n        if (item.name === product.name) {\n            return {...item, quantity: Number(amount)};\n        }\n        return item;\n    })\n}\n const changeTotalAmount = (selectedProducts) => {\n     let quantity = 0\n     selectedProducts.map(item => {\n         return quantity += Number(item.quantity)\n     })\n     return quantity\n }\n\nconst changeTotalNutreants = (state, product, amountOfProduct) => {\n    let totalRecipes = {...state.recipeNutrients.totalNutrients}\n    let oldAmount = 0\n    state.selectedProducts.map(item =>{\n        if(item.name === product.name){\n            return oldAmount = item.quantity\n        }\n        return oldAmount\n    })\n    Object.keys(totalRecipes).map((key) => {\n        let newNutrient = 0\n        newNutrient = totalRecipes[key].quantity -= (product.totalNutrients[key].quantity/100)*oldAmount\n        newNutrient = totalRecipes[key].quantity += (product.totalNutrients[key].quantity/100)*amountOfProduct\n        return {...totalRecipes[key], newNutrient}\n    })\n    return totalRecipes\n    }\n\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case actionTypes.SELECT_PRODUCT: \n            action.product.quantity = Number(action.amount)\n            return {\n                ...state,\n                selectedProducts: state.selectedProducts.concat(action.product),\n                showModal:false,\n                recipeNutrients : {\n                    ...state.recipeNutrients,\n                    totalNutrients : addToRecipeNutrients(state, action.product.totalNutrients, action.product.quantity),\n                    quantity : addToRecipeAmount(state, action.product.quantity)\n                }\n            }\n        case actionTypes.DELETE_PRODUCT:\n            return {\n                ...state,\n                selectedProducts: state.selectedProducts.filter(product => action.productName !== product.name),\n                recipeNutrients : {\n                    ...state.recipeNutrients,\n                    totalNutrients : deleteFromRecipeNutrients(state, action.product.totalNutrients, action.product.quantity),\n                    quantity : deleteFromRecipeAmount(state, action.product.quantity)\n                }\n            }\n        case actionTypes.CLICKED_PRODUCT:\n            return {\n                ...state,\n                clickedProduct: action.product,\n                showModal:true\n            }\n        case actionTypes.CHANGE_AMOUNT:\n            const selectedProducts = changeProductAmount(state, action.product, action.amount);\n            const totalNutrients = changeTotalNutreants(state, action.product, action.amount);\n            const quantity = changeTotalAmount(selectedProducts)\n            return {\n                ...state,\n                selectedProducts,\n                recipeNutrients: {\n                    ...state.recipeNutrients,\n                    totalNutrients,\n                    quantity\n                }\n            }\n        case actionTypes.ADD_PRODUCT_START:\n            return {\n              ...state,\n              loading: true\n            }\n        case actionTypes.ADD_PRODUCT_FAIL:\n            return {\n              ...state,\n              loading: false\n            }\n        case actionTypes.ADD_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                products: state.products.concat(action.product),\n                showModal:false,\n                loading: false\n            }\n        case actionTypes.FETCH_PRODUCTS_START:\n            return {\n              ...state,\n              loading: true\n            }\n        case actionTypes.FETCH_PRODUCTS_FAIL:\n            return {\n              ...state,\n              loading: false\n            }\n        case actionTypes.FETCH_PRODUCTS_SUCCESS:\n            return {\n              ...state,\n              products: action.products,\n              loading: false\n            }\n        case actionTypes.DELETE_PRODUCT_START:\n            return {\n                ...state,\n                loading: true\n            }\n        case actionTypes.DELETE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n        case actionTypes.DELETE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                selectedProducts: state.selectedProducts.filter(product => action.productKey !== product.key),\n                loading: false \n            }\n        case actionTypes.CLOSE_MODAL:\n            return {\n                ...state,\n                showModal:false, \n                clickedProduct: \"\"\n            }\n          case actionTypes.OPEN_MODAL:\n              return {\n                  ...state,\n                  showModal:true\n                }\n        case actionTypes.ADD_RECIPE_NAME:\n          return {\n            ...state,\n            recipeNutrients: {\n              ...state.recipeNutrients,\n              name: action.recipeName\n            }\n          }\n        default: return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}