{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/RecipesNew/Recipes.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport AddProduct from \"../../components/Product/AddProduct/AddProduct\";\nimport Product from \"../../components/Product/Product\";\nimport RecipeModal from \"../../components/Recipe/RecipeModal/RecipeModal\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Recipes.module.css\";\n\nconst Recipes = props => {\n  useEffect(() => {\n    props.onFetchRecipes(props.token, props.userId);\n  }); // componentDidMount () {\n  //     this.props.onFetchRecipes(this.props.token, this.props.userId)\n  //   }\n  // render(){\n  //     let recipesList = <Spinner/>\n  //     if (!this.props.loading){\n  //         recipesList = \n  //             <>\n  //                 <AddProduct name=\"Add New Recipe\" clicked={() => this.props.history.push(\"/\")}/>\n  //                 {(this.props.recipes || []).map(recipe =>(\n  //                     <Product\n  //                         key={recipe.name}\n  //                         name={recipe.name}\n  //                         fatCalories={recipe.totalNutrients.FAT.quantity*9}\n  //                         carbohydratesCalories={recipe.totalNutrients.CHOCDF.quantity*4}\n  //                         proteinCalories={recipe.totalNutrients.PROCNT.quantity*4}\n  //                         clicked={()=>{\n  //                             this.props.onClickedRecipe(recipe);\n  //                             this.props.onOpenModal()\n  //                         }}\n  //                     />))}\n  //             </>\n  //     }\n\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    show: this.props.showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(RecipeModal, {\n    product: this.props.clickedRecipe,\n    recipeItems: this.props.clickedRecipe.items,\n    closeIconClicked: () => this.props.onCloseModal(),\n    deleteRecipe: () => {\n      this.props.onDeleteRecipe(this.props.clickedRecipe.key, this.props.token);\n      console.log(this.props.clickedRecipe);\n      this.props.onCloseModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: Styles.Recipe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, recipesList));\n};\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipe.savedRecipes,\n    showModal: state.productList.showModal,\n    clickedRecipe: state.recipe.clickedRecipe,\n    loading: state.recipe.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClickedRecipe: recipe => dispatch(actions.recipeClicked(recipe)),\n    onOpenModal: () => dispatch(actions.openModal()),\n    onCloseModal: () => dispatch(actions.closeModal()),\n    onFetchRecipes: (token, userId) => dispatch(actions.fetchRecipes(token, userId)),\n    onDeleteRecipe: (recipeKey, token) => dispatch(actions.deleteRecipe(recipeKey, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes);","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/RecipesNew/Recipes.js"],"names":["React","useEffect","connect","Modal","AddProduct","Product","RecipeModal","Spinner","actions","Styles","Recipes","props","onFetchRecipes","token","userId","showModal","clickedRecipe","items","onCloseModal","onDeleteRecipe","key","console","log","Recipe","recipesList","mapStateToProps","state","recipes","recipe","savedRecipes","productList","loading","auth","mapDispatchToProps","dispatch","onClickedRecipe","recipeClicked","onOpenModal","openModal","closeModal","fetchRecipes","recipeKey","deleteRecipe"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport AddProduct from \"../../components/Product/AddProduct/AddProduct\";\nimport Product from \"../../components/Product/Product\";\nimport RecipeModal from \"../../components/Recipe/RecipeModal/RecipeModal\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Recipes.module.css\";\n\n\nconst Recipes = props => {\n\n    useEffect(() => {\n        props.onFetchRecipes(props.token, props.userId)\n    })\n\n    // componentDidMount () {\n    //     this.props.onFetchRecipes(this.props.token, this.props.userId)\n    //   }\n\n    // render(){\n\n    //     let recipesList = <Spinner/>\n    //     if (!this.props.loading){\n    //         recipesList = \n    //             <>\n    //                 <AddProduct name=\"Add New Recipe\" clicked={() => this.props.history.push(\"/\")}/>\n    //                 {(this.props.recipes || []).map(recipe =>(\n    //                     <Product\n    //                         key={recipe.name}\n    //                         name={recipe.name}\n    //                         fatCalories={recipe.totalNutrients.FAT.quantity*9}\n    //                         carbohydratesCalories={recipe.totalNutrients.CHOCDF.quantity*4}\n    //                         proteinCalories={recipe.totalNutrients.PROCNT.quantity*4}\n    //                         clicked={()=>{\n    //                             this.props.onClickedRecipe(recipe);\n    //                             this.props.onOpenModal()\n    //                         }}\n    //                     />))}\n    //             </>\n    //     }\n        return(\n            <>\n                <Modal show={this.props.showModal}>\n                    <RecipeModal\n                        product={this.props.clickedRecipe}\n                        recipeItems={this.props.clickedRecipe.items}\n                        closeIconClicked={()=>this.props.onCloseModal()}\n                        deleteRecipe={() =>{\n                            this.props.onDeleteRecipe(this.props.clickedRecipe.key, this.props.token)\n                            console.log(this.props.clickedRecipe)\n                            this.props.onCloseModal()\n                        }}/>\n                </Modal>\n                <div className={Styles.Recipe}>\n                    {recipesList}  \n                </div>\n            </>\n        )\n    }\n\nconst mapStateToProps = state => {\n    return {\n        recipes: state.recipe.savedRecipes,\n        showModal: state.productList.showModal,\n        clickedRecipe: state.recipe.clickedRecipe,\n        loading: state.recipe.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      onClickedRecipe: (recipe) => dispatch(actions.recipeClicked(recipe)),\n      onOpenModal: () => dispatch(actions.openModal()),\n      onCloseModal: () => dispatch(actions.closeModal()),\n      onFetchRecipes: (token, userId) => dispatch(actions.fetchRecipes(token, userId)),\n      onDeleteRecipe: (recipeKey, token) => dispatch(actions.deleteRecipe(recipeKey, token))\n    }\n  }\n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes);"]},"metadata":{},"sourceType":"module"}