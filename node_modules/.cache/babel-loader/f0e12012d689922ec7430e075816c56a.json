{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/components/Product/Product.js\";\nimport React from \"react\";\nimport Styles from \"./Product.module.css\";\n\nconst Product = props => {\n  const total = props.fat + props.carbs + props.protein;\n  const carbs = props.carbs / total * 100;\n  const protein = props.protein / total * 100;\n  const fat = props.fat / total * 100;\n  console.log(carbs, fat, protein);\n  return React.createElement(\"div\", {\n    className: Styles.Container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.ProductAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-birthday-cake\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: Styles.ProductBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.ProductName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.name), React.createElement(\"div\", {\n    className: Styles.StatusBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.StatusCarbsBar,\n    style: {\n      width: \"\".concat(carbs, \"%\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: Styles.StatusProteinBar,\n    style: {\n      width: \"\".concat(protein, \"%\"),\n      left: \"\".concat(carbs, \"%\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: Styles.StatusFatBar,\n    style: {\n      width: \"\".concat(fat, \"%\"),\n      left: \"\".concat(carbs + protein, \"%\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })))) // <div className={Styles.Product}\n  //     onClick={props.clicked}>\n  //     <div>{props.name}</div>\n  //     <div className={Styles.Doughnut}>\n  //         <Doughnut \n  //         data={{\n  //             labels:[\"Fat\", \"Carbohydrates\", \"Protein\"],\n  //             datasets: [{\n  //                 data:[props.fatCalories,props.carbohydratesCalories, props.proteinCalories],\n  //                 backgroundColor:[\"#FF6384\",\"#FFCE56\",\"#36A2EB\"]\n  //             },]\n  //         }}\n  //         options={{\n  //             legend:{\n  //                 display: false\n  //             },\n  //             tooltips: {\n  //                 callbacks: {\n  //                     label:(tooltipItem,data)=>(`${data.labels[tooltipItem.index]} : ${(data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]/data.datasets[tooltipItem.datasetIndex]._meta[Object.keys(data.datasets[tooltipItem.datasetIndex]._meta)[0]].total*100).toFixed(1)} %`)\n  //                 }\n  //             }\n  //         }}/>\n  //     </div>\n  // </div>\n  ;\n};\n\nexport default Product;","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/components/Product/Product.js"],"names":["React","Styles","Product","props","total","fat","carbs","protein","console","log","Container","ProductAvatar","ProductBody","ProductName","name","StatusBar","StatusCarbsBar","width","StatusProteinBar","left","StatusFatBar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAG;AACpB,QAAMC,KAAK,GAAGD,KAAK,CAACE,GAAN,GAAYF,KAAK,CAACG,KAAlB,GAA0BH,KAAK,CAACI,OAA9C;AACA,QAAMD,KAAK,GAAIH,KAAK,CAACG,KAAN,GAAYF,KAAb,GAAoB,GAAlC;AACA,QAAMG,OAAO,GAAIJ,KAAK,CAACI,OAAN,GAAcH,KAAf,GAAsB,GAAtC;AACA,QAAMC,GAAG,GAAIF,KAAK,CAACE,GAAN,GAAUD,KAAX,GAAkB,GAA9B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBD,GAAnB,EAAwBE,OAAxB;AAEA,SAEA;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACS,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAET,MAAM,CAACU,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACW,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACY,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCV,KAAK,CAACW,IAA3C,CADJ,EAEI;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACc,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAEd,MAAM,CAACe,cADtB;AAEI,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,YAAIX,KAAJ;AAAN,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI;AACI,IAAA,SAAS,EAAEL,MAAM,CAACiB,gBADtB;AAEI,IAAA,KAAK,EAAE;AAACD,MAAAA,KAAK,YAAIV,OAAJ,MAAN;AAAsBY,MAAAA,IAAI,YAAIb,KAAJ;AAA1B,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EASI;AACI,IAAA,SAAS,EAAEL,MAAM,CAACmB,YADtB;AAEI,IAAA,KAAK,EAAE;AAACH,MAAAA,KAAK,YAAIZ,GAAJ,MAAN;AAAkBc,MAAAA,IAAI,YAAIb,KAAK,GAACC,OAAV;AAAtB,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAFJ,CAJJ,CAFA,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;AAqDF,CA5DF;;AA8DA,eAAeL,OAAf","sourcesContent":["import React from \"react\";\nimport Styles from \"./Product.module.css\";\n\nconst Product = props =>{\n    const total = props.fat + props.carbs + props.protein\n    const carbs = (props.carbs/total)*100\n    const protein = (props.protein/total)*100\n    const fat = (props.fat/total)*100\n    console.log(carbs, fat, protein)\n\n    return (\n\n    <div className={Styles.Container}>\n        <div className={Styles.ProductAvatar}>\n            <i className=\"fas fa-birthday-cake\"></i>\n        </div>\n        <div className={Styles.ProductBody}>\n            <div className={Styles.ProductName}>{props.name}</div>\n            <div className={Styles.StatusBar}>\n                <div \n                    className={Styles.StatusCarbsBar}\n                    style={{width:`${carbs}%`}}>\n                </div>\n                <div \n                    className={Styles.StatusProteinBar}\n                    style={{width:`${protein}%`, left:`${carbs}%`}}>\n                </div>\n                <div \n                    className={Styles.StatusFatBar}\n                    style={{width:`${fat}%`, left:`${carbs+protein}%`}}>\n                </div>\n                {/* a lot of edge cases\n                    1) no carbs\n                    2) no fat\n                    3)  */}\n            </div>\n        </div>\n    </div>\n\n    // <div className={Styles.Product}\n    //     onClick={props.clicked}>\n    //     <div>{props.name}</div>\n    //     <div className={Styles.Doughnut}>\n    //         <Doughnut \n    //         data={{\n    //             labels:[\"Fat\", \"Carbohydrates\", \"Protein\"],\n    //             datasets: [{\n    //                 data:[props.fatCalories,props.carbohydratesCalories, props.proteinCalories],\n    //                 backgroundColor:[\"#FF6384\",\"#FFCE56\",\"#36A2EB\"]\n    //             },]\n    //         }}\n    //         options={{\n    //             legend:{\n    //                 display: false\n    //             },\n    //             tooltips: {\n    //                 callbacks: {\n    //                     label:(tooltipItem,data)=>(`${data.labels[tooltipItem.index]} : ${(data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]/data.datasets[tooltipItem.datasetIndex]._meta[Object.keys(data.datasets[tooltipItem.datasetIndex]._meta)[0]].total*100).toFixed(1)} %`)\n    //                 }\n    //             }\n    //         }}/>\n    //     </div>\n    // </div>\n)}\n\nexport default Product"]},"metadata":{},"sourceType":"module"}