{"ast":null,"code":"import _objectSpread from \"/home/lukas/Desktop/projects/nutrition-label-maker/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios\";\nexport const saveRecipeStart = () => {\n  return {\n    type: actionTypes.SAVE_RECIPE_START\n  };\n};\nexport const saveRecipeFail = error => {\n  return {\n    type: actionTypes.SAVE_RECIPE_FAIL,\n    error\n  };\n};\nexport const saveRecipeSuccess = recipe => {\n  return {\n    type: actionTypes.ADD_PRODUCT_SUCCESS,\n    recipe\n  };\n};\nexport const saveRecipe = (recipe, items) => {\n  recipe.items = items;\n  console.log(recipe);\n  return dispatch => {\n    dispatch(saveRecipeStart());\n    axios.post(\"/recipes.json\", recipe).then(res => {\n      dispatch(saveRecipeSuccess(recipe));\n      console.log(res);\n    }).catch(error => dispatch(saveRecipeFail(error)));\n  };\n};\nexport const fetchRecipesStart = () => {\n  return {\n    type: actionTypes.FETCH_RECIPES_START\n  };\n};\nexport const fetchRecipesFail = error => {\n  return {\n    type: actionTypes.FETCH_RECIPES_FAIL,\n    error\n  };\n};\nexport const fecthRecipesSuccess = recipes => {\n  return {\n    type: actionTypes.FETCH_RECIPESS_SUCCESS,\n    recipes\n  };\n};\nexport const fetchRecipes = () => {\n  return dispatch => {\n    dispatch(fetchRecipesStart());\n    axios.get(\"/recipes.json\").then(response => {\n      const fetchedRecipes = [];\n\n      for (const key in response.data) {\n        fetchedRecipes.push(_objectSpread({}, response.data[key]));\n      }\n\n      dispatch(fecthRecipesSuccess(fetchedRecipes));\n    }).catch(error => {\n      dispatch(fetchRecipesFail(error));\n    });\n  };\n};\nexport const recipeClicked = recipe => {\n  return {\n    type: actionTypes.RECIPE_CLICKED,\n    recipe\n  };\n};","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/Store/actions/recipe.js"],"names":["actionTypes","axios","saveRecipeStart","type","SAVE_RECIPE_START","saveRecipeFail","error","SAVE_RECIPE_FAIL","saveRecipeSuccess","recipe","ADD_PRODUCT_SUCCESS","saveRecipe","items","console","log","dispatch","post","then","res","catch","fetchRecipesStart","FETCH_RECIPES_START","fetchRecipesFail","FETCH_RECIPES_FAIL","fecthRecipesSuccess","recipes","FETCH_RECIPESS_SUCCESS","fetchRecipes","get","response","fetchedRecipes","key","data","push","recipeClicked","RECIPE_CLICKED"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACrC,SAAO;AACHH,IAAAA,IAAI,EAAEH,WAAW,CAACO,gBADf;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,iBAAiB,GAAIC,MAAD,IAAY;AACzC,SAAO;AACHN,IAAAA,IAAI,EAAEH,WAAW,CAACU,mBADf;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,UAAU,GAAG,CAACF,MAAD,EAAQG,KAAR,KAAkB;AACxCH,EAAAA,MAAM,CAACG,KAAP,GAAeA,KAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,SAAOM,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACb,eAAe,EAAhB,CAAR;AACAD,IAAAA,KAAK,CAACe,IAAN,CAAW,eAAX,EAA4BP,MAA5B,EACKQ,IADL,CACWC,GAAD,IAAS;AACXH,MAAAA,QAAQ,CAACP,iBAAiB,CAACC,MAAD,CAAlB,CAAR;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH,KAJL,EAKKC,KALL,CAKWb,KAAK,IAAIS,QAAQ,CAACV,cAAc,CAACC,KAAD,CAAf,CAL5B;AAMH,GARD;AASH,CAZM;AAcP,OAAO,MAAMc,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHjB,IAAAA,IAAI,EAAEH,WAAW,CAACqB;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,gBAAgB,GAAIhB,KAAD,IAAW;AACvC,SAAO;AACHH,IAAAA,IAAI,EAAEH,WAAW,CAACuB,kBADf;AAEHjB,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMkB,mBAAmB,GAAIC,OAAD,IAAa;AAC5C,SAAO;AACHtB,IAAAA,IAAI,EAAEH,WAAW,CAAC0B,sBADf;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,YAAY,GAAG,MAAM;AAC9B,SAAOZ,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACK,iBAAiB,EAAlB,CAAR;AACAnB,IAAAA,KAAK,CAAC2B,GAAN,CAAU,eAAV,EACKX,IADL,CACUY,QAAQ,IAAI;AACd,YAAMC,cAAc,GAAG,EAAvB;;AACA,WAAK,MAAMC,GAAX,IAAkBF,QAAQ,CAACG,IAA3B,EAAiC;AAC7BF,QAAAA,cAAc,CAACG,IAAf,mBACOJ,QAAQ,CAACG,IAAT,CAAcD,GAAd,CADP;AAGH;;AACDhB,MAAAA,QAAQ,CAACS,mBAAmB,CAACM,cAAD,CAApB,CAAR;AACH,KATL,EAUKX,KAVL,CAUWb,KAAK,IAAI;AACZS,MAAAA,QAAQ,CAACO,gBAAgB,CAAChB,KAAD,CAAjB,CAAR;AACH,KAZL;AAaH,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAM4B,aAAa,GAAIzB,MAAD,IAAY;AACrC,SAAO;AACHN,IAAAA,IAAI,EAAEH,WAAW,CAACmC,cADf;AAEH1B,IAAAA;AAFG,GAAP;AAIH,CALM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios\";\n\nexport const saveRecipeStart = () => {\n    return {\n        type: actionTypes.SAVE_RECIPE_START\n    }\n}\n\nexport const saveRecipeFail = (error) => {\n    return {\n        type: actionTypes.SAVE_RECIPE_FAIL,\n        error\n    }\n}\n\nexport const saveRecipeSuccess = (recipe) => {\n    return {\n        type: actionTypes.ADD_PRODUCT_SUCCESS,\n        recipe\n    }\n}\n\nexport const saveRecipe = (recipe,items) => {\n    recipe.items = items\n    console.log(recipe)\n    return dispatch => {\n        dispatch(saveRecipeStart())\n        axios.post(\"/recipes.json\", recipe)\n            .then((res) => {\n                dispatch(saveRecipeSuccess(recipe));\n                console.log(res)\n            })\n            .catch(error => dispatch(saveRecipeFail(error)))\n    }\n}\n\nexport const fetchRecipesStart = () => {\n    return {\n        type: actionTypes.FETCH_RECIPES_START\n    }\n}\n\nexport const fetchRecipesFail = (error) => {\n    return {\n        type: actionTypes.FETCH_RECIPES_FAIL,\n        error\n    }\n}\n\nexport const fecthRecipesSuccess = (recipes) => {\n    return {\n        type: actionTypes.FETCH_RECIPESS_SUCCESS,\n        recipes\n    }\n}\n\nexport const fetchRecipes = () => {\n    return dispatch => {\n        dispatch(fetchRecipesStart())\n        axios.get(\"/recipes.json\")\n            .then(response => {\n                const fetchedRecipes = []\n                for (const key in response.data) {\n                    fetchedRecipes.push({\n                        ...response.data[key]\n                    })\n                }\n                dispatch(fecthRecipesSuccess(fetchedRecipes))\n            })\n            .catch(error => {\n                dispatch(fetchRecipesFail(error))\n            })\n    }\n}\n\nexport const recipeClicked = (recipe) => {\n    return {\n        type: actionTypes.RECIPE_CLICKED,\n        recipe\n    }\n}"]},"metadata":{},"sourceType":"module"}