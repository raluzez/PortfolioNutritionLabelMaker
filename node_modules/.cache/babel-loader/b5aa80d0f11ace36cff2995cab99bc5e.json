{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/ProductsList/ProductsList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Product from \"../../components/Product/Product\";\nimport AddProduct from \"../../components/Product/AddProduct/AddProduct\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport ProductModal from \"../../components/Product/ProductModal/ProductModal\";\nimport AddProductModal from \"../../components/Product/AddProductModal/AddProductModal\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./ProductsList.module.css\";\n\nclass ProductsList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      amountInput: \"\"\n    };\n\n    this.productSelectedHandler = () => {\n      this.props.onSelectProduct(this.props.clickedProduct, this.state.amountInput);\n      this.props.history.push(\"/\");\n    };\n\n    this.amountInputHandler = event => {\n      this.setState({\n        amountInput: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.onFetchProducts(this.props.token, this.props.userId);\n  }\n\n  render() {\n    let productsList = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n\n    if (!this.props.loading) {\n      productsList = React.createElement(React.Fragment, null, React.createElement(AddProduct, {\n        clicked: () => this.props.onClickedProduct(null),\n        name: \"Add New Product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), (this.props.products || []).map(product => React.createElement(Product, {\n        key: product.name,\n        name: product.name,\n        fatCalories: product.totalNutrients.FAT.quantity * 9,\n        carbohydratesCalories: product.totalNutrients.CHOCDF.quantity * 4,\n        proteinCalories: product.totalNutrients.PROCNT.quantity * 4,\n        clicked: () => this.props.onClickedProduct(product),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(Modal, {\n      show: this.props.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.props.clickedProduct ? React.createElement(ProductModal, {\n      product: this.props.clickedProduct,\n      buttonClickced: this.productSelectedHandler,\n      deleteProduct: () => this.props.onDeleteProduct(this.props.clickedProduct.key, this.props.token),\n      inputValue: this.state.amountInput,\n      inputChanged: event => this.amountInputHandler(event),\n      closeIconClicked: () => this.props.onCloseModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }) : React.createElement(AddProductModal, {\n      closeIconClicked: () => this.props.onCloseModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: Styles.ProductList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, productsList));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    showModal: state.productList.showModal,\n    clickedProduct: state.productList.clickedProduct,\n    selectedProducts: state.productList.selectedProducts,\n    products: state.productList.products,\n    loading: state.productList.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSelectProduct: (product, amount) => dispatch(actions.productSelected(product, amount)),\n    onClickedProduct: product => dispatch(actions.productClicked(product)),\n    onCloseModal: () => dispatch(actions.closeModal()),\n    onFetchProducts: (token, userId) => dispatch(actions.fetchProducts(token, userId)),\n    onDeleteProduct: (productKey, token) => dispatch(action.deleteProduct(productKey, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsList);","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/ProductsList/ProductsList.js"],"names":["React","Component","connect","Product","AddProduct","Modal","ProductModal","AddProductModal","Spinner","actions","Styles","ProductsList","state","amountInput","productSelectedHandler","props","onSelectProduct","clickedProduct","history","push","amountInputHandler","event","setState","target","value","componentDidMount","onFetchProducts","token","userId","render","productsList","loading","onClickedProduct","products","map","product","name","totalNutrients","FAT","quantity","CHOCDF","PROCNT","showModal","onDeleteProduct","key","onCloseModal","ProductList","mapStateToProps","productList","selectedProducts","auth","mapDispatchToProps","dispatch","amount","productSelected","productClicked","closeModal","fetchProducts","productKey","action","deleteProduct"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Product from \"../../components/Product/Product\";\nimport AddProduct from \"../../components/Product/AddProduct/AddProduct\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport ProductModal from \"../../components/Product/ProductModal/ProductModal\";\nimport AddProductModal from \"../../components/Product/AddProductModal/AddProductModal\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./ProductsList.module.css\";\n\n\nclass ProductsList extends Component {\n    state = { amountInput:\"\"}\n\n    componentDidMount () {\n      this.props.onFetchProducts(this.props.token, this.props.userId)\n    }\n\n    productSelectedHandler = () => {\n      this.props.onSelectProduct(this.props.clickedProduct, this.state.amountInput);\n      this.props.history.push(\"/\")\n    }\n\n    amountInputHandler = (event) => {\n      this.setState({amountInput:event.target.value})\n    }\n\n    render(){\n\n      let productsList = <Spinner/>\n      if (!this.props.loading) {\n        productsList = \n        <>\n          <AddProduct clicked={()=>this.props.onClickedProduct(null)} name=\"Add New Product\"/>\n          {(this.props.products || []).map(product =>(\n            <Product\n              key={product.name}\n              name={product.name}\n              fatCalories={product.totalNutrients.FAT.quantity*9}\n              carbohydratesCalories={product.totalNutrients.CHOCDF.quantity*4}\n              proteinCalories={product.totalNutrients.PROCNT.quantity*4}\n              clicked={()=>this.props.onClickedProduct(product)}\n          />\n        ))}\n      </>\n    }\n        return(\n          <>\n            <Modal show={this.props.showModal}>\n              {this.props.clickedProduct \n              ? <ProductModal\n                  product={this.props.clickedProduct}\n                  buttonClickced={this.productSelectedHandler}\n                  deleteProduct={() => this.props.onDeleteProduct(this.props.clickedProduct.key, this.props.token)}\n                  inputValue={this.state.amountInput}\n                  inputChanged={event =>this.amountInputHandler(event)}\n                  closeIconClicked={()=>this.props.onCloseModal()}/> \n              : <AddProductModal\n                  closeIconClicked={()=>this.props.onCloseModal()}/>}\n            </Modal>\n            <div className={Styles.ProductList}>\n              {productsList}\n            </div>\n          </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    showModal: state.productList.showModal,\n    clickedProduct: state.productList.clickedProduct,\n    selectedProducts: state.productList.selectedProducts,\n    products: state.productList.products,\n    loading: state.productList.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSelectProduct: (product, amount) => dispatch(actions.productSelected(product, amount)),\n    onClickedProduct: (product) => dispatch(actions.productClicked(product)),\n    onCloseModal:() => dispatch(actions.closeModal()),\n    onFetchProducts: (token, userId) => dispatch(actions.fetchProducts(token, userId)),\n    onDeleteProduct: (productKey, token) => dispatch(action.deleteProduct(productKey, token))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsList);"]},"metadata":{},"sourceType":"module"}