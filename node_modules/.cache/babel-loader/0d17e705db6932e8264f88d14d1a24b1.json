{"ast":null,"code":"import _objectSpread from \"/home/lukas/Desktop/projects/nutrition-label-maker/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios\";\nexport const productSelected = (product, amount) => {\n  return {\n    type: actionTypes.SELECT_PRODUCT,\n    product: product,\n    amount: amount\n  };\n};\nexport const productDeleted = (productName, product) => {\n  return {\n    type: actionTypes.DELETE_PRODUCT,\n    productName: productName,\n    product: product\n  };\n};\nexport const productClicked = product => {\n  return {\n    type: actionTypes.CLICKED_PRODUCT,\n    product\n  };\n};\nexport const changeItemAmount = (amount, product) => {\n  return {\n    type: actionTypes.CHANGE_AMOUNT,\n    product,\n    amount\n  };\n};\nexport const addProductStart = () => {\n  return {\n    type: actionTypes.ADD_PRODUCT_START\n  };\n};\nexport const addProductFail = error => {\n  return {\n    type: actionTypes.ADD_PRODUCT_FAIL,\n    error\n  };\n};\nexport const addProductSuccess = product => {\n  return {\n    type: actionTypes.ADD_PRODUCT_SUCCESS,\n    product\n  };\n};\nexport const addProduct = (product, token, userId) => {\n  product.userId = userId;\n  return dispatch => {\n    dispatch(addProductStart());\n    axios.post(\"/products.json?auth=\".concat(token), product).then(res => {\n      product.key = res.data.name;\n      dispatch(addProductSuccess(product));\n    }).catch(error => dispatch(addProductFail(error)));\n  };\n};\nexport const fetchProductsStart = () => {\n  return {\n    type: actionTypes.FETCH_PRODUCTS_START\n  };\n};\nexport const fetchProductsFail = error => {\n  return {\n    type: actionTypes.FETCH_PRODUCTS_FAIL,\n    error\n  };\n};\nexport const fecthProductsSuccess = products => {\n  return {\n    type: actionTypes.FETCH_PRODUCTS_SUCCESS,\n    products\n  };\n};\nexport const fetchProducts = (token, userId) => {\n  return dispatch => {\n    dispatch(fetchProductsStart());\n    axios.get(\"/products.json?auth=\".concat(token, \"&orderBy=\\\"userId\\\"&equalTo=\\\"\").concat(userId, \"\\\"\")).then(response => {\n      const fetchedProducts = [];\n\n      for (const key in response.data) {\n        fetchedProducts.push(_objectSpread({}, response.data[key], {\n          key: key\n        }));\n      }\n\n      dispatch(fecthProductsSuccess(fetchedProducts));\n    }).catch(error => {\n      dispatch(fetchProductsFail(error));\n    });\n  };\n};\nexport const deleteProductStart = () => {\n  return {\n    type: actionTypes.DELETE_PRODUCT_START\n  };\n};\nexport const deleteProductFail = error => {\n  return {\n    type: actionTypes.DELETE_PRODUCT_FAIL,\n    error\n  };\n};\nexport const deleteProductSuccess = () => {\n  return {\n    type: actionTypes.DELETE_PRODUCT_SUCCESS\n  };\n};\nexport const deleteProduct = (productKey, token) => {\n  return dispatch => {\n    dispatch(deleteProductStart());\n    axios.delete(\"/products/\".concat(productKey, \".json?auth=\").concat(token)).then(res => dispatch(deleteProductSuccess())).catch(error => dispatch(deleteProductFail(error)));\n  };\n};\nexport const closeModal = () => {\n  return {\n    type: actionTypes.CLOSE_MODAL\n  };\n};\nexport const openModal = () => {\n  return {\n    type: actionTypes.OPEN_MODAL\n  };\n};\nexport const addRecipeName = recipeName => {\n  return {\n    type: actionTypes.ADD_RECIPE_NAME,\n    recipeName: recipeName\n  };\n};","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/Store/actions/productsList.js"],"names":["actionTypes","axios","productSelected","product","amount","type","SELECT_PRODUCT","productDeleted","productName","DELETE_PRODUCT","productClicked","CLICKED_PRODUCT","changeItemAmount","CHANGE_AMOUNT","addProductStart","ADD_PRODUCT_START","addProductFail","error","ADD_PRODUCT_FAIL","addProductSuccess","ADD_PRODUCT_SUCCESS","addProduct","token","userId","dispatch","post","then","res","key","data","name","catch","fetchProductsStart","FETCH_PRODUCTS_START","fetchProductsFail","FETCH_PRODUCTS_FAIL","fecthProductsSuccess","products","FETCH_PRODUCTS_SUCCESS","fetchProducts","get","response","fetchedProducts","push","deleteProductStart","DELETE_PRODUCT_START","deleteProductFail","DELETE_PRODUCT_FAIL","deleteProductSuccess","DELETE_PRODUCT_SUCCESS","deleteProduct","productKey","delete","closeModal","CLOSE_MODAL","openModal","OPEN_MODAL","addRecipeName","recipeName","ADD_RECIPE_NAME"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios\";\n\nexport const productSelected = (product, amount) => {\n    return {\n        type: actionTypes.SELECT_PRODUCT,\n        product: product,\n        amount: amount\n    }\n}\n\nexport const productDeleted = (productName, product) => {\n    return {\n        type : actionTypes.DELETE_PRODUCT,\n        productName : productName,\n        product : product\n    }\n}\n\nexport const productClicked = (product) => {\n    return {\n        type: actionTypes.CLICKED_PRODUCT,\n        product\n    }\n}\n\nexport const changeItemAmount = (amount, product) => {\n    return {\n        type: actionTypes.CHANGE_AMOUNT,\n        product,\n        amount\n    }\n}\n\nexport const addProductStart = () => {\n    return {\n        type: actionTypes.ADD_PRODUCT_START\n    }\n}\n\nexport const addProductFail = (error) => {\n    return {\n        type: actionTypes.ADD_PRODUCT_FAIL,\n        error\n    }\n}\n\nexport const addProductSuccess = (product) => {\n    return {\n        type: actionTypes.ADD_PRODUCT_SUCCESS,\n        product\n        \n    }\n}\n\nexport const addProduct = (product, token, userId) => {\n    product.userId = userId\n    return dispatch => {\n        dispatch(addProductStart())\n        axios.post(`/products.json?auth=${token}`, product)\n            .then((res) => {\n                product.key = res.data.name\n                dispatch(addProductSuccess(product));\n            })\n            .catch(error => dispatch(addProductFail(error)))\n    }\n}\n\nexport const fetchProductsStart = () => {\n    return {\n        type: actionTypes.FETCH_PRODUCTS_START\n    }\n}\n\nexport const fetchProductsFail = (error) => {\n    return {\n        type: actionTypes.FETCH_PRODUCTS_FAIL,\n        error\n    }\n}\n\nexport const fecthProductsSuccess = (products) => {\n    return {\n        type: actionTypes.FETCH_PRODUCTS_SUCCESS,\n        products\n    }\n}\n\nexport const fetchProducts = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchProductsStart())\n        axios.get(`/products.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\n            .then(response => {\n                const fetchedProducts = []\n                for (const key in response.data) {\n                    fetchedProducts.push({\n                        ...response.data[key],\n                        key: key\n                    })\n                }\n                dispatch(fecthProductsSuccess(fetchedProducts))\n            })\n            .catch(error => {\n                dispatch(fetchProductsFail(error))\n            })\n    }\n}\n\nexport const deleteProductStart = () => {\n    return {\n        type: actionTypes.DELETE_PRODUCT_START\n    }\n}\n\nexport const deleteProductFail = (error) => {\n    return {\n        type: actionTypes.DELETE_PRODUCT_FAIL,\n        error\n    }\n}\n\nexport const deleteProductSuccess = () => {\n    return {\n        type: actionTypes.DELETE_PRODUCT_SUCCESS\n    }\n}\n\nexport const deleteProduct = (productKey, token) => {\n    return dispatch => {\n        dispatch(deleteProductStart())\n        axios.delete(`/products/${productKey}.json?auth=${token}`)\n            .then( res =>  dispatch (deleteProductSuccess() ))\n            .catch(error => dispatch (deleteProductFail(error)))\n    }\n}\n\nexport const closeModal = () => {\n    return {\n        type:actionTypes.CLOSE_MODAL\n    }\n}\n\nexport const openModal = () => {\n    return {\n        type:actionTypes.OPEN_MODAL\n    }\n}\n\nexport const addRecipeName = (recipeName) => {\n    return {\n        type: actionTypes.ADD_RECIPE_NAME,\n        recipeName: recipeName\n    }\n}"]},"metadata":{},"sourceType":"module"}