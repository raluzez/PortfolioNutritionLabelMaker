{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/NutritionLabel/NutritionLabel.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../../components/NutritionLabelComponents/Header/Header\";\nimport Nutrients from \"../../components/NutritionLabelComponents/Nutrients/Nutrients\";\nimport Vitamins from \"../../components/NutritionLabelComponents/Vitamins/Vitamins\";\nimport Styles from \"./NutritionLabel.module.css\";\n\nclass NutritionLabel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      itemsList: [{\n        nutrition: null,\n        name: \"Cheese\",\n        amount: {\n          amount: 100,\n          units: \"grams\"\n        }\n      }, {\n        nutrition: null,\n        name: \"Salt\",\n        amount: {\n          amount: 2,\n          units: [\"spoon\", \"spoons\"]\n        }\n      }, {\n        nutrition: {\n          servingSize: \"100g\",\n          servingsPerContainer: null,\n          calories: 144,\n          totalFat: 9.6,\n          saturatedFat: 3.2,\n          transFat: 0,\n          cholesterol: 372,\n          sodium: 142,\n          totalCarbs: 0.7,\n          dietaryFiber: 0,\n          sugars: 0.4,\n          protein: 12.6,\n          vitaminA: 10.8,\n          vitaminC: 0,\n          calcium: 4.4,\n          iron: 9.8\n        },\n        name: \"Egg\",\n        amount: {\n          amount: 1,\n          units: null\n        }\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: Styles.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Header, {\n      servingSize: this.state.itemsList[2].nutrition.servingSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Nutrients, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Total Fat\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Saturated Fat \", this.state.itemsList[2].nutrition.saturatedFat, \"g\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Trans Fat \", this.state.itemsList[2].nutrition.transFat))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Cholesterol\"), \" \", this.state.itemsList[2].nutrition.cholesterol, \"mg\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Sodium\"), \" \", this.state.itemsList[2].nutrition.sodium, \"mg\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Total Carbohydrates\"), \" \", this.state.itemsList[2].nutrition.totalCarbs, \"g\", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Dietary Fiber \", this.state.itemsList[2].nutrition.dietaryFiber, \"g\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Sugars \", this.state.itemsList[2].nutrition.sugars, \"g\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Protein\"), \" \", this.state.itemsList[2].nutrition.protein, \"g\"))), React.createElement(Vitamins, {\n      collection: [[\"Vitamin A \".concat(this.state.itemsList[2].nutrition.vitaminA, \"%\"), \"Vitamin C \".concat(this.state.itemsList[2].nutrition.vitaminC, \"%\")], [\"Calcium \".concat(this.state.itemsList[2].nutrition.calcium, \"%\"), \"Iron \".concat(this.state.itemsList[2].nutrition.iron, \"%\")]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default NutritionLabel;","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/NutritionLabel/NutritionLabel.js"],"names":["React","Component","Header","Nutrients","Vitamins","Styles","NutritionLabel","state","itemsList","nutrition","name","amount","units","servingSize","servingsPerContainer","calories","totalFat","saturatedFat","transFat","cholesterol","sodium","totalCarbs","dietaryFiber","sugars","protein","vitaminA","vitaminC","calcium","iron","render","Container","Attribute"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../../components/NutritionLabelComponents/Header/Header\";\nimport Nutrients from \"../../components/NutritionLabelComponents/Nutrients/Nutrients\";\nimport Vitamins from \"../../components/NutritionLabelComponents/Vitamins/Vitamins\";\nimport Styles from \"./NutritionLabel.module.css\";\n\nclass NutritionLabel extends Component {\n    state = {\n        itemsList: [\n            {\n            nutrition:null,\n            name: \"Cheese\",\n            amount:{    \n                amount:100,\n                units:\"grams\"\n                }\n            },\n            {\n            nutrition:null,\n            name: \"Salt\",\n            amount:{   \n                amount:2,\n                units:[\"spoon\",\"spoons\"]\n                }\n            },\n            {\n            nutrition:{\n                servingSize:\"100g\",\n                servingsPerContainer:null,\n                calories:144,\n                totalFat:9.6,\n                saturatedFat:3.2,\n                transFat:0,\n                cholesterol:372,\n                sodium:142,\n                totalCarbs:0.7,\n                dietaryFiber:0,\n                sugars:0.4,\n                protein:12.6,\n                vitaminA:10.8,\n                vitaminC:0,\n                calcium:4.4,\n                iron: 9.8\n            },\n            name: \"Egg\",\n            amount: {\n                amount:1,\n                units:null\n                }\n            }\n        ]\n    } \n    render(){\n        return(\n            <div className={Styles.Container}>\n                <Header servingSize={this.state.itemsList[2].nutrition.servingSize}/>\n                <Nutrients>\n                    <ul>\n                        <li>\n                            <b className={Styles.Attribute}>Total Fat</b>\n                            <ul>\n                                <li>Saturated Fat {this.state.itemsList[2].nutrition.saturatedFat}g</li>\n                                <li>Trans Fat {this.state.itemsList[2].nutrition.transFat}</li>\n                            </ul>\n                        </li>\n                        <li>\n                            <b className={Styles.Attribute}>Cholesterol</b> {this.state.itemsList[2].nutrition.cholesterol}mg\n                        </li>\n                        <li>\n                            <b className={Styles.Attribute}>Sodium</b> {this.state.itemsList[2].nutrition.sodium}mg\n                        </li>\n                        <li>\n                            <b className={Styles.Attribute}>Total Carbohydrates</b> {this.state.itemsList[2].nutrition.totalCarbs}g\n                            <ul>\n                                <li>Dietary Fiber {this.state.itemsList[2].nutrition.dietaryFiber}g</li>\n                                <li>Sugars {this.state.itemsList[2].nutrition.sugars}g</li>\n                            </ul>\n                        </li>\n                        <li>\n                            <b className={Styles.Attribute}>Protein</b> {this.state.itemsList[2].nutrition.protein}g\n                        </li>\n                    </ul>\n                </Nutrients>\n                <Vitamins collection={[\n                    [`Vitamin A ${this.state.itemsList[2].nutrition.vitaminA}%`, `Vitamin C ${this.state.itemsList[2].nutrition.vitaminC}%`],\n                    [`Calcium ${this.state.itemsList[2].nutrition.calcium}%`, `Iron ${this.state.itemsList[2].nutrition.iron}%`]\n                ]}/>\n            </div>\n        )\n    }\n}\n\nexport default NutritionLabel;"]},"metadata":{},"sourceType":"module"}