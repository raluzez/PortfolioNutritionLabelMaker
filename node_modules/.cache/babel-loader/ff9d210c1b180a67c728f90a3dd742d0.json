{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Home/Home.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport AddRecipeModal from \"../../components/Recipe/AddRecipeModal/AddRecipeModal\";\nimport ItemsList from \"../../components/ItemsList/ItemsList\";\nimport NutritionLabel from \"../../components/NutritionLabel/NutritionLabel\";\nimport Auth from \"../Auth/Auth\";\nimport * as actions from \"../../Store/actions\";\n\nconst home = props => {\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    show: props.showAuthModal,\n    style: {\n      backgroundColor: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Auth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(Modal, {\n    show: props.showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(AddRecipeModal, {\n    recipe: props.recipeAsProduct,\n    closeModal: props.onCloseModal,\n    addName: event => props.onAddRecipeName(event.target.value),\n    recipeItems: props.selectedProducts,\n    saveRecipe: () => {\n      props.onSaveRecipe(props.recipeAsProduct, props.selectedProducts);\n      props.onCloseModal();\n      props.history.push(\"/recipes\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(ItemsList, {\n    addProductClicked: () => props.history.push(\"/productlist\"),\n    selectedProducts: props.selectedProducts,\n    saveRecipeClicked: () => props.onSaveRecipeClicked(props.recipeAsProduct),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(NutritionLabel, {\n    product: props.recipeAsProduct,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    recipeAsProduct: state.productList.recipeNutrients,\n    selectedProducts: state.productList.selectedProducts,\n    showModal: state.productList.showModal,\n    showAuthModal: state.auth.showAuthModal\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSaveRecipeClicked: product => dispatch(actions.productClicked(product)),\n    onCloseModal: () => dispatch(actions.closeModal()),\n    onAddRecipeName: recipeName => dispatch(actions.addRecipeName(recipeName)),\n    onSaveRecipe: (recipe, items) => dispatch(actions.saveRecipe(recipe, items))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(home);","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Home/Home.js"],"names":["React","connect","Modal","AddRecipeModal","ItemsList","NutritionLabel","Auth","actions","home","props","showAuthModal","backgroundColor","showModal","recipeAsProduct","onCloseModal","event","onAddRecipeName","target","value","selectedProducts","onSaveRecipe","history","push","onSaveRecipeClicked","mapStateToProps","state","productList","recipeNutrients","auth","mapDispatchToProps","dispatch","product","productClicked","closeModal","recipeName","addRecipeName","recipe","items","saveRecipe"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport AddRecipeModal from \"../../components/Recipe/AddRecipeModal/AddRecipeModal\"\nimport ItemsList from \"../../components/ItemsList/ItemsList\";\nimport NutritionLabel from \"../../components/NutritionLabel/NutritionLabel\";\nimport Auth from \"../Auth/Auth\";\nimport * as actions from \"../../Store/actions\";\n\nconst home = (props) =>{\n    \n    return(\n            <>  \n                <Modal show={props.showAuthModal} style={{backgroundColor:\"red\"}}>\n                    <Auth/>\n                </Modal>\n                <Modal show={props.showModal}>\n                    <AddRecipeModal\n                        recipe={props.recipeAsProduct}\n                        closeModal={props.onCloseModal}\n                        addName={event => props.onAddRecipeName(event.target.value)}\n                        recipeItems={props.selectedProducts}\n                        saveRecipe={() => {\n                            props.onSaveRecipe(props.recipeAsProduct, props.selectedProducts); \n                            props.onCloseModal();\n                            props.history.push(\"/recipes\")}}/>\n                </Modal>\n                <ItemsList \n                    addProductClicked={() =>props.history.push(\"/productlist\")} \n                    selectedProducts={props.selectedProducts}\n                    saveRecipeClicked={() => props.onSaveRecipeClicked(props.recipeAsProduct)}/>\n                <NutritionLabel product={props.recipeAsProduct}/>\n            </>\n)}\nconst mapStateToProps = state => {\n    return {\n        recipeAsProduct : state.productList.recipeNutrients,\n        selectedProducts : state.productList.selectedProducts,\n        showModal : state.productList.showModal,\n        showAuthModal: state.auth.showAuthModal\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSaveRecipeClicked :(product) => dispatch(actions.productClicked(product)),\n        onCloseModal:() => dispatch(actions.closeModal()),\n        onAddRecipeName: (recipeName) => dispatch(actions.addRecipeName(recipeName)),\n        onSaveRecipe: (recipe, items) => dispatch(actions.saveRecipe(recipe, items))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(home);"]},"metadata":{},"sourceType":"module"}