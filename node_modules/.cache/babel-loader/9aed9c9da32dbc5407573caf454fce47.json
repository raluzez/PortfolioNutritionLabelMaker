{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Auth/Auth.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"../../components/UI/Button/Button\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Auth.module.css\";\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      existingUser: false,\n      password: \"\",\n      email: \"\",\n      repeatedPassword: \"\",\n      passwordMatch: true\n    };\n\n    this.existingUserHandler = () => {\n      this.setState({\n        existingUser: !this.state.existingUser\n      });\n    };\n\n    this.emailHandler = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.passwordHandler = event => {\n      this.this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.signUpPasswordHandler = event => {\n      if (event.target.placeholder === \"Password\") {\n        this.setState({\n          password: event.target.value\n        });\n        this.checkPassword(event.target.value, event.target.placeholder);\n      } else if (event.target.placeholder === \"Repeat Password\") {\n        this.setState({\n          repeatedPassword: event.target.value\n        });\n        this.checkPassword(event.target.value, event.target.placeholder);\n      }\n    };\n\n    this.checkPassword = (value, type) => {\n      if (type === \"Password\") {\n        if (value !== this.state.repeatedPassword) {\n          this.setState({\n            passwordMatch: false\n          });\n        } else {\n          this.setState({\n            passwordMatch: true\n          });\n        }\n      } else {\n        if (value !== this.state.password) {\n          this.setState({\n            passwordMatch: false\n          });\n        } else {\n          this.setState({\n            passwordMatch: true\n          });\n        }\n      }\n    };\n\n    this.resetPasswordError = () => {\n      this.setState({\n        passwordMatch: true\n      });\n    };\n\n    this.resetInputsValues = () => {\n      this.setState({\n        password: \"\",\n        email: \"\",\n        repeatedPassword: \"\"\n      });\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (!this.state.passwordMatch) {\n      errorMessage = React.createElement(\"p\", {\n        className: Styles.ErrorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Passwords Don't Match\");\n    } else {\n      errorMessage = null;\n    }\n\n    if (this.props.error) {\n      errorMessage = React.createElement(\"p\", {\n        className: Styles.ErrorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.props.error.message);\n    }\n\n    let form = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: Styles.Name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Login\"), errorMessage, React.createElement(\"form\", {\n      className: Styles.Form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"E-mail\",\n      onChange: this.emailHandler,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: this.passwordHandler,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: Styles.ButtonsDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Button, {\n      classname: \"Success\",\n      onclick: () => this.props.onAuth(this.state.email, this.state.password, this.state.existingUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Button, {\n      classname: \"Neutral\",\n      onclick: () => {\n        this.existingUserHandler();\n        this.props.switchForm();\n        this.resetInputsValues();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Sign Up\")));\n\n    if (!this.state.existingUser) {\n      form = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: Styles.Name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Sign Up\"), errorMessage, React.createElement(\"form\", {\n        className: Styles.Form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"E-mail\",\n        onChange: this.emailHandler,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: this.signUpPasswordHandler,\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Repeat Password\",\n        onChange: this.signUpPasswordHandler,\n        value: this.state.repeatedPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: Styles.ButtonsDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Button, {\n        classname: \"Success\",\n        onclick: () => this.props.onAuth(this.state.email, this.state.password, this.state.existingUser),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(Button, {\n        classname: \"Neutral\",\n        onclick: () => {\n          this.existingUserHandler();\n          this.props.switchForm();\n          this.resetPasswordError();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Login\")));\n    }\n\n    return React.createElement(React.Fragment, null, form);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Auth/Auth.js"],"names":["React","Component","connect","Button","actions","Styles","Auth","state","existingUser","password","email","repeatedPassword","passwordMatch","existingUserHandler","setState","emailHandler","event","target","value","passwordHandler","this","signUpPasswordHandler","placeholder","checkPassword","type","resetPasswordError","resetInputsValues","render","errorMessage","ErrorMessage","props","error","message","form","Name","Form","ButtonsDiv","onAuth","switchForm","mapStateToProps","auth","mapDispatchToProps","dispatch","isSignUp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"../../components/UI/Button/Button\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Auth.module.css\";\n\n\nclass Auth extends Component {\n    state = {\n        existingUser:false,\n        password:\"\",\n        email:\"\",\n        repeatedPassword: \"\",\n        passwordMatch: true\n    }\n\n    existingUserHandler = () => {\n        this.setState({existingUser:!this.state.existingUser})\n    }\n\n    emailHandler = (event) => {\n        this.setState({email: event.target.value})\n    }\n\n    passwordHandler = (event) => {\n        this.this.setState({password: event.target.value})\n    }\n\n    signUpPasswordHandler = (event) => {\n        if (event.target.placeholder === \"Password\"){\n            this.setState({password : event.target.value});\n            this.checkPassword(event.target.value, event.target.placeholder)\n        } else if (event.target.placeholder === \"Repeat Password\") {\n            this.setState({repeatedPassword : event.target.value});\n            this.checkPassword(event.target.value, event.target.placeholder)\n        }\n    }\n\n    checkPassword = (value,type) => {\n        if(type===\"Password\"){\n            if(value!==this.state.repeatedPassword){\n                this.setState({passwordMatch: false})\n            } else { this.setState({passwordMatch: true}) }\n        } else {\n            if(value!==this.state.password){\n                this.setState({passwordMatch: false})\n            } else { this.setState({passwordMatch: true}) }\n        }\n    }\n\n    resetPasswordError = () => {\n        this.setState({passwordMatch: true})\n    }\n\n    resetInputsValues = () => {\n        this.setState({password:\"\", email:\"\", repeatedPassword: \"\"})\n    }\n\n\n\n    render(){\n\n        let errorMessage = null\n\n        if (!this.state.passwordMatch) {\n            errorMessage = <p className={Styles.ErrorMessage}>Passwords Don't Match</p>\n        } else {errorMessage = null}\n\n        if (this.props.error) {\n            errorMessage = <p className={Styles.ErrorMessage}>{this.props.error.message}</p>\n        } \n\n        let form = \n        <>\n            <div className={Styles.Name}>Login</div>\n            {errorMessage}\n            <form className={Styles.Form}>\n                <input type=\"text\" placeholder=\"E-mail\" onChange={this.emailHandler} value={this.state.email} />\n                <input type=\"password\" placeholder=\"Password\" onChange={this.passwordHandler} value={this.state.password}/>\n            </form>\n            <div className={Styles.ButtonsDiv}>\n                <Button classname=\"Success\" onclick={() => this.props.onAuth(this.state.email, this.state.password, this.state.existingUser)}>Submit</Button>\n                <Button classname=\"Neutral\" onclick={() => {this.existingUserHandler(); this.props.switchForm(); this.resetInputsValues()}}>Sign Up</Button>\n            </div>   \n        </>\n        \n        if(!this.state.existingUser) {\n            form = \n            <>\n                <div className={Styles.Name}>Sign Up</div>\n                {errorMessage}\n                <form className={Styles.Form}>\n                    <input type=\"text\" placeholder=\"E-mail\" onChange={this.emailHandler} value={this.state.email}/>\n                    <input type=\"password\" placeholder=\"Password\" onChange={this.signUpPasswordHandler} value={this.state.password}/>\n                    <input type=\"password\" placeholder=\"Repeat Password\" onChange={this.signUpPasswordHandler} value={this.state.repeatedPassword}/>\n                </form>\n                <div className={Styles.ButtonsDiv}>\n                    <Button classname=\"Success\" onclick={() => this.props.onAuth(this.state.email, this.state.password, this.state.existingUser)}>Submit</Button>\n                    <Button classname=\"Neutral\" onclick={() => {this.existingUserHandler(); this.props.switchForm(); this.resetPasswordError()}}>Login</Button>\n                </div>   \n            </>\n        }\n        return(\n            <>{form}</>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        error: state.auth.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp))\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);"]},"metadata":{},"sourceType":"module"}