{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Home/Home.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport RecipieModal from \"../../components/Recipie/RecipieModal/RecipieModal\";\nimport ItemsList from \"../../components/ItemsList/ItemsList\";\nimport NutritionLabel from \"../../components/NutritionLabel/NutritionLabel\";\nimport * as actions from \"../../Store/actions/productsList\";\n\nconst home = props => {\n  const addName = event => {\n    console.log(props.recipieAsProduct.name);\n    return [...props.recipieAsProduct], props.recipieAsProduct.name = event.target.value;\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    show: props.showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(RecipieModal, {\n    recipie: props.recipieAsProduct,\n    closeIconClicked: () => props.onCloseModal(),\n    addName: addName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(ItemsList, {\n    addProductClicked: () => props.history.push(\"/productlist\"),\n    selectedProducts: props.selectedProducts,\n    saveRecipieClicked: () => props.onSaveRecipieClicked(props.recipieAsProduct),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(NutritionLabel, {\n    product: props.recipieAsProduct,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    recipieAsProduct: state.reciepieNutrients,\n    selectedProducts: state.selectedProducts,\n    showModal: state.showModal\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSaveRecipieClicked: product => dispatch(actions.productClicked(product)),\n    onCloseModal: () => dispatch(actions.closeModal()),\n    onAddRecipieNane: name => dispatch(actions.addRecipieName(name))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(home);","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Home/Home.js"],"names":["React","connect","Modal","RecipieModal","ItemsList","NutritionLabel","actions","home","props","addName","event","console","log","recipieAsProduct","name","target","value","showModal","onCloseModal","history","push","selectedProducts","onSaveRecipieClicked","mapStateToProps","state","reciepieNutrients","mapDispatchToProps","dispatch","product","productClicked","closeModal","onAddRecipieNane","addRecipieName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,YAAP,MAAyB,oDAAzB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kCAAzB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAU;AAEnB,QAAMC,OAAO,GAAIC,KAAD,IACZ;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,gBAAN,CAAuBC,IAAnC;AACE,WACA,CAAC,GAAGN,KAAK,CAACK,gBAAV,GACAL,KAAK,CAACK,gBAAN,CAAuBC,IAAvB,GAA8BJ,KAAK,CAACK,MAAN,CAAaC,KAF3C;AAGE,GALV;;AAQA,SACQ,0CACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAER,KAAK,CAACS,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AACI,IAAA,OAAO,EAAET,KAAK,CAACK,gBADnB;AAEI,IAAA,gBAAgB,EAAE,MAAML,KAAK,CAACU,YAAN,EAF5B;AAGI,IAAA,OAAO,EAAET,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAOI,oBAAC,SAAD;AACI,IAAA,iBAAiB,EAAE,MAAKD,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmB,cAAnB,CAD5B;AAEI,IAAA,gBAAgB,EAAEZ,KAAK,CAACa,gBAF5B;AAGI,IAAA,kBAAkB,EAAE,MAAMb,KAAK,CAACc,oBAAN,CAA2Bd,KAAK,CAACK,gBAAjC,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAWI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEL,KAAK,CAACK,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADR;AAcF,CAxBF;;AAyBA,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHX,IAAAA,gBAAgB,EAAGW,KAAK,CAACC,iBADtB;AAEHJ,IAAAA,gBAAgB,EAAGG,KAAK,CAACH,gBAFtB;AAGHJ,IAAAA,SAAS,EAAGO,KAAK,CAACP;AAHf,GAAP;AAKH,CAND;;AAQA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHL,IAAAA,oBAAoB,EAAGM,OAAD,IAAaD,QAAQ,CAACrB,OAAO,CAACuB,cAAR,CAAuBD,OAAvB,CAAD,CADxC;AAEHV,IAAAA,YAAY,EAAC,MAAMS,QAAQ,CAACrB,OAAO,CAACwB,UAAR,EAAD,CAFxB;AAGHC,IAAAA,gBAAgB,EAAGjB,IAAD,IAAUa,QAAQ,CAACrB,OAAO,CAAC0B,cAAR,CAAuBlB,IAAvB,CAAD;AAHjC,GAAP;AAKH,CAND;;AAQA,eAAeb,OAAO,CAACsB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,IAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport RecipieModal from \"../../components/Recipie/RecipieModal/RecipieModal\"\nimport ItemsList from \"../../components/ItemsList/ItemsList\";\nimport NutritionLabel from \"../../components/NutritionLabel/NutritionLabel\";\nimport * as actions from \"../../Store/actions/productsList\";\n\nconst home = (props) =>{\n    \n    const addName = (event) => \n        { console.log(props.recipieAsProduct.name )\n            return(\n            [...props.recipieAsProduct],\n            props.recipieAsProduct.name = event.target.value\n            )}\n    \n\n    return(\n            <>\n                <Modal show={props.showModal}>\n                    <RecipieModal\n                        recipie={props.recipieAsProduct}\n                        closeIconClicked={() => props.onCloseModal()}\n                        addName={addName}/>\n                </Modal>\n                <ItemsList \n                    addProductClicked={() =>props.history.push(\"/productlist\")} \n                    selectedProducts={props.selectedProducts}\n                    saveRecipieClicked={() => props.onSaveRecipieClicked(props.recipieAsProduct)}/>\n                <NutritionLabel product={props.recipieAsProduct}/>\n            </>\n)}\nconst mapStateToProps = state => {\n    return {\n        recipieAsProduct : state.reciepieNutrients,\n        selectedProducts : state.selectedProducts,\n        showModal : state.showModal\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSaveRecipieClicked :(product) => dispatch(actions.productClicked(product)),\n        onCloseModal:() => dispatch(actions.closeModal()),\n        onAddRecipieNane: (name) => dispatch(actions.addRecipieName(name)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(home);"]},"metadata":{},"sourceType":"module"}