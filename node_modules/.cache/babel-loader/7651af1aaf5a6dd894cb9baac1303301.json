{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Auth/Auth.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"../../components/UI/Button/Button\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Auth.module.css\";\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      existingUser: false,\n      password: \"\",\n      email: \"\"\n    };\n\n    this.existingUserHandler = () => {\n      this.setState({\n        existingUser: !this.state.existingUser\n      });\n    };\n\n    this.emailHandler = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.passwordHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n  }\n\n  render() {\n    let form = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: Styles.Name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"form\", {\n      className: Styles.Form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"E-mail\",\n      onChange: this.emailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: this.passwordHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: Styles.ButtonsDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Button, {\n      classname: \"Success\",\n      onclick: console.log(this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Button, {\n      classname: \"Neutral\",\n      onclick: () => {\n        this.existingUserHandler();\n        this.props.switchForm();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Sign Up\")));\n\n    if (!this.state.existingUser) {\n      form = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: Styles.Name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(\"form\", {\n        className: Styles.Form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"E-mail\",\n        onChange: this.emailHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: this.passwordHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Repeat Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: Styles.ButtonsDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Button, {\n        classname: \"Success\",\n        onclick: console.log(this.state),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(Button, {\n        classname: \"Neutral\",\n        onclick: () => {\n          this.existingUserHandler();\n          this.props.switchForm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Login\")));\n    }\n\n    return React.createElement(React.Fragment, null, form);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Auth/Auth.js"],"names":["React","Component","connect","Button","actions","Styles","Auth","state","existingUser","password","email","existingUserHandler","setState","emailHandler","event","target","value","passwordHandler","render","form","Name","Form","ButtonsDiv","console","log","props","switchForm","mapDispatchToProps","dispatch","onAuth","isSignUp","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"../../components/UI/Button/Button\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Auth.module.css\";\n\n\nclass Auth extends Component {\n    state = {\n        existingUser:false,\n        password:\"\",\n        email:\"\"\n    }\n\n    existingUserHandler = () => {\n        this.setState({existingUser:!this.state.existingUser})\n    }\n\n    emailHandler = (event) => {\n        this.setState({email: event.target.value})\n    }\n\n    passwordHandler = (event) => {\n        this.setState({password: event.target.value})\n    }\n    render(){\n\n        let form = \n        <>\n            <div className={Styles.Name}>Login</div>\n            <form className={Styles.Form}>\n                <input type=\"text\" placeholder=\"E-mail\" onChange={this.emailHandler}/>\n                <input type=\"password\" placeholder=\"Password\" onChange={this.passwordHandler}/>\n            </form>\n            <div className={Styles.ButtonsDiv}>\n                <Button classname=\"Success\" onclick={console.log(this.state)}>Submit</Button>\n                <Button classname=\"Neutral\" onclick={()=>{this.existingUserHandler(); this.props.switchForm()}}>Sign Up</Button>\n            </div>   \n        </>\n        \n        if(!this.state.existingUser) {\n            form = \n            <>\n                <div className={Styles.Name}>Sign Up</div>\n                <form className={Styles.Form}>\n                    <input type=\"text\" placeholder=\"E-mail\" onChange={this.emailHandler}/>\n                    <input type=\"password\" placeholder=\"Password\" onChange={this.passwordHandler}/>\n                    <input type=\"password\" placeholder=\"Repeat Password\"/>\n                </form>\n                <div className={Styles.ButtonsDiv}>\n                    <Button classname=\"Success\" onclick={console.log(this.state)}>Submit</Button>\n                    <Button classname=\"Neutral\" onclick={()=>{this.existingUserHandler(); this.props.switchForm()}}>Login</Button>\n                </div>   \n            </>\n        }\n        return(\n            <>{form}</>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp))\n    }\n} \n\nexport default connect(null, mapDispatchToProps)(Auth);"]},"metadata":{},"sourceType":"module"}