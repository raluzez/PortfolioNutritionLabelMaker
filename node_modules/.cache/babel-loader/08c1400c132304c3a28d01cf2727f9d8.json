{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/RecipesNew/Recipes.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport AddProduct from \"../../components/Product/AddProduct/AddProduct\";\nimport Product from \"../../components/Product/Product\";\nimport RecipeModal from \"../../components/Recipe/RecipeModal/RecipeModal\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Recipes.module.css\";\n\nconst Recipes = props => {\n  const onFetchRecipes = props.onFetchRecipes,\n        token = props.token,\n        userId = props.userId;\n  useEffect(() => {\n    onFetchRecipes(token, userId);\n    console.log('labas');\n  }, [onFetchRecipes, token, userId]);\n  let recipesList = React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n\n  if (!props.loading) {\n    recipesList = React.createElement(React.Fragment, null, React.createElement(AddProduct, {\n      name: \"Add New Recipe\",\n      clicked: () => props.history.push(\"/\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), (props.recipes || []).map(recipe => React.createElement(Product, {\n      key: recipe.name,\n      name: recipe.name,\n      fatCalories: recipe.totalNutrients.FAT.quantity * 9,\n      carbohydratesCalories: recipe.totalNutrients.CHOCDF.quantity * 4,\n      proteinCalories: recipe.totalNutrients.PROCNT.quantity * 4,\n      clicked: () => {\n        props.onClickedRecipe(recipe);\n        props.onOpenModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    show: props.showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(RecipeModal, {\n    product: props.clickedRecipe,\n    recipeItems: props.clickedRecipe.items,\n    closeIconClicked: () => props.onCloseModal(),\n    deleteRecipe: () => {\n      props.onDeleteRecipe(props.clickedRecipe.key, props.token);\n      console.log(props.clickedRecipe);\n      props.onCloseModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: Styles.Recipe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, recipesList));\n};\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipe.savedRecipes,\n    showModal: state.productList.showModal,\n    clickedRecipe: state.recipe.clickedRecipe,\n    loading: state.recipe.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClickedRecipe: recipe => dispatch(actions.recipeClicked(recipe)),\n    onOpenModal: () => dispatch(actions.openModal()),\n    onCloseModal: () => dispatch(actions.closeModal()),\n    onFetchRecipes: (token, userId) => dispatch(actions.fetchRecipes(token, userId)),\n    onDeleteRecipe: (recipeKey, token) => dispatch(actions.deleteRecipe(recipeKey, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes);","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/RecipesNew/Recipes.js"],"names":["React","useEffect","connect","Modal","AddProduct","Product","RecipeModal","Spinner","actions","Styles","Recipes","props","onFetchRecipes","token","userId","console","log","recipesList","loading","history","push","recipes","map","recipe","name","totalNutrients","FAT","quantity","CHOCDF","PROCNT","onClickedRecipe","onOpenModal","showModal","clickedRecipe","items","onCloseModal","onDeleteRecipe","key","Recipe","mapStateToProps","state","savedRecipes","productList","auth","mapDispatchToProps","dispatch","recipeClicked","openModal","closeModal","fetchRecipes","recipeKey","deleteRecipe"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport AddProduct from \"../../components/Product/AddProduct/AddProduct\";\nimport Product from \"../../components/Product/Product\";\nimport RecipeModal from \"../../components/Recipe/RecipeModal/RecipeModal\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Recipes.module.css\";\n\n\nconst Recipes = props => {\n    const { onFetchRecipes, token, userId } = props\n\n    useEffect(() => {\n        onFetchRecipes(token, userId);\n        console.log('labas')\n    },[ onFetchRecipes, token, userId ])\n\n    let recipesList = <Spinner/>\n    if (!props.loading){\n        recipesList = \n            <>\n                <AddProduct name=\"Add New Recipe\" clicked={() => props.history.push(\"/\")}/>\n                    {(props.recipes || []).map(recipe =>(\n                        <Product\n                            key={recipe.name}\n                            name={recipe.name}\n                            fatCalories={recipe.totalNutrients.FAT.quantity*9}\n                            carbohydratesCalories={recipe.totalNutrients.CHOCDF.quantity*4}\n                            proteinCalories={recipe.totalNutrients.PROCNT.quantity*4}\n                            clicked={()=>{\n                                props.onClickedRecipe(recipe);\n                                props.onOpenModal()\n                            }}\n                        />))}\n                </>\n        }\n\n    return(\n        <>\n            <Modal show={props.showModal}>\n                <RecipeModal\n                    product={props.clickedRecipe}\n                    recipeItems={props.clickedRecipe.items}\n                    closeIconClicked={()=>props.onCloseModal()}\n                    deleteRecipe={() =>{\n                        props.onDeleteRecipe(props.clickedRecipe.key, props.token)\n                        console.log(props.clickedRecipe)\n                        props.onCloseModal()\n                    }}/>\n            </Modal>\n            <div className={Styles.Recipe}>\n                {recipesList}  \n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        recipes: state.recipe.savedRecipes,\n        showModal: state.productList.showModal,\n        clickedRecipe: state.recipe.clickedRecipe,\n        loading: state.recipe.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      onClickedRecipe: (recipe) => dispatch(actions.recipeClicked(recipe)),\n      onOpenModal: () => dispatch(actions.openModal()),\n      onCloseModal: () => dispatch(actions.closeModal()),\n      onFetchRecipes: (token, userId) => dispatch(actions.fetchRecipes(token, userId)),\n      onDeleteRecipe: (recipeKey, token) => dispatch(actions.deleteRecipe(recipeKey, token))\n    }\n  }\n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes);"]},"metadata":{},"sourceType":"module"}