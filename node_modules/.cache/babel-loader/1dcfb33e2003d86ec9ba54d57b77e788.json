{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/RecipesNew/Recipes.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport AddProduct from \"../../components/Product/AddProduct/AddProduct\";\nimport Product from \"../../components/Product/Product\";\nimport RecipeModal from \"../../components/Recipe/RecipeModal/RecipeModal\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Recipes.module.css\";\n\nconst Recipes = props => {\n  useEffect(() => {\n    props.onFetchRecipes(props.token, props.userId);\n  });\n  let recipesList = React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  });\n\n  if (!props.loading) {\n    recipesList = React.createElement(React.Fragment, null, React.createElement(AddProduct, {\n      name: \"Add New Recipe\",\n      clicked: () => this.props.history.push(\"/\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), (this.props.recipes || []).map(recipe => React.createElement(Product, {\n      key: recipe.name,\n      name: recipe.name,\n      fatCalories: recipe.totalNutrients.FAT.quantity * 9,\n      carbohydratesCalories: recipe.totalNutrients.CHOCDF.quantity * 4,\n      proteinCalories: recipe.totalNutrients.PROCNT.quantity * 4,\n      clicked: () => {\n        this.props.onClickedRecipe(recipe);\n        this.props.onOpenModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    show: this.props.showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(RecipeModal, {\n    product: this.props.clickedRecipe,\n    recipeItems: this.props.clickedRecipe.items,\n    closeIconClicked: () => this.props.onCloseModal(),\n    deleteRecipe: () => {\n      this.props.onDeleteRecipe(this.props.clickedRecipe.key, this.props.token);\n      console.log(this.props.clickedRecipe);\n      this.props.onCloseModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: Styles.Recipe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, recipesList));\n};\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipe.savedRecipes,\n    showModal: state.productList.showModal,\n    clickedRecipe: state.recipe.clickedRecipe,\n    loading: state.recipe.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClickedRecipe: recipe => dispatch(actions.recipeClicked(recipe)),\n    onOpenModal: () => dispatch(actions.openModal()),\n    onCloseModal: () => dispatch(actions.closeModal()),\n    onFetchRecipes: (token, userId) => dispatch(actions.fetchRecipes(token, userId)),\n    onDeleteRecipe: (recipeKey, token) => dispatch(actions.deleteRecipe(recipeKey, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes);","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/RecipesNew/Recipes.js"],"names":["React","useEffect","connect","Modal","AddProduct","Product","RecipeModal","Spinner","actions","Styles","Recipes","props","onFetchRecipes","token","userId","recipesList","loading","history","push","recipes","map","recipe","name","totalNutrients","FAT","quantity","CHOCDF","PROCNT","onClickedRecipe","onOpenModal","showModal","clickedRecipe","items","onCloseModal","onDeleteRecipe","key","console","log","Recipe","mapStateToProps","state","savedRecipes","productList","auth","mapDispatchToProps","dispatch","recipeClicked","openModal","closeModal","fetchRecipes","recipeKey","deleteRecipe"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport AddProduct from \"../../components/Product/AddProduct/AddProduct\";\nimport Product from \"../../components/Product/Product\";\nimport RecipeModal from \"../../components/Recipe/RecipeModal/RecipeModal\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Recipes.module.css\";\n\n\nconst Recipes = props => {\n\n    useEffect(() => {\n        props.onFetchRecipes(props.token, props.userId)\n    })\n\n    let recipesList = <Spinner/>\n    if (!props.loading){\n        recipesList = \n            <>\n                <AddProduct name=\"Add New Recipe\" clicked={() => this.props.history.push(\"/\")}/>\n                    {(this.props.recipes || []).map(recipe =>(\n                        <Product\n                            key={recipe.name}\n                            name={recipe.name}\n                            fatCalories={recipe.totalNutrients.FAT.quantity*9}\n                            carbohydratesCalories={recipe.totalNutrients.CHOCDF.quantity*4}\n                            proteinCalories={recipe.totalNutrients.PROCNT.quantity*4}\n                            clicked={()=>{\n                                this.props.onClickedRecipe(recipe);\n                                this.props.onOpenModal()\n                            }}\n                        />))}\n                </>\n        }\n\n    return(\n        <>\n            <Modal show={this.props.showModal}>\n                <RecipeModal\n                    product={this.props.clickedRecipe}\n                    recipeItems={this.props.clickedRecipe.items}\n                    closeIconClicked={()=>this.props.onCloseModal()}\n                    deleteRecipe={() =>{\n                        this.props.onDeleteRecipe(this.props.clickedRecipe.key, this.props.token)\n                        console.log(this.props.clickedRecipe)\n                        this.props.onCloseModal()\n                    }}/>\n            </Modal>\n            <div className={Styles.Recipe}>\n                {recipesList}  \n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        recipes: state.recipe.savedRecipes,\n        showModal: state.productList.showModal,\n        clickedRecipe: state.recipe.clickedRecipe,\n        loading: state.recipe.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      onClickedRecipe: (recipe) => dispatch(actions.recipeClicked(recipe)),\n      onOpenModal: () => dispatch(actions.openModal()),\n      onCloseModal: () => dispatch(actions.closeModal()),\n      onFetchRecipes: (token, userId) => dispatch(actions.fetchRecipes(token, userId)),\n      onDeleteRecipe: (recipeKey, token) => dispatch(actions.deleteRecipe(recipeKey, token))\n    }\n  }\n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes);"]},"metadata":{},"sourceType":"module"}