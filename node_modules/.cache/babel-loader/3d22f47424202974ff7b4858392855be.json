{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/components/NutritionLabel/NutritionLabel.js\";\nimport React from \"react\";\nimport Header from \"./NutritionLabelComponents/Header/Header\";\nimport Nutrients from \"./NutritionLabelComponents/Nutrients/Nutrients\";\nimport Vitamins from \"./NutritionLabelComponents/Vitamins/Vitamins\";\nimport Styles from \"./NutritionLabel.module.css\"; // import get from \"lodash.get\";\n\nvar get = require('lodash.get');\n\nconst dailyIntake = {\n  ENERC_KCAL: 2000,\n  FAT: 78,\n  FASAT: 20,\n  FATRN: 2,\n  CHOLE: 300,\n  NA: 2300,\n  CHOCDF: 275,\n  FIBTG: 28,\n  SUGAR: 50,\n  PROCNT: 50,\n  VITA_RAE: 0.9,\n  VITC: 90,\n  FE: 18,\n  CA: 1300\n};\n\nconst nutritionLabel = props => {\n  const product = get(props, 'product');\n\n  const fixToTwo = (obj, path, def) => {\n    return Math.round(get(obj, path, def) * 100) / 100;\n  };\n\n  return React.createElement(\"div\", {\n    className: Styles.Container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Header, {\n    servingSize: fixToTwo(product, \"quantity.toFixed(1)\", 100),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Nutrients, {\n    calories: fixToTwo(product, \"totalNutrients.ENERC_KCAL.quantity\", 0),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.Float,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"10%\"), React.createElement(\"b\", {\n    className: Styles.Attribute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Total Fat\"), \"  \", fixToTwo(product, 'totalNutrients.FAT.quantity', 0), \" g\", React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.Float,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"10%\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Saturated Fat  \", fixToTwo(product, 'totalNutrients.FASAT.quantity', 0), \" g\"), React.createElement(\"div\", {\n    className: Styles.Float,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"10%\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Trans Fat  \", fixToTwo(product, 'totalNutrients.FATRN.quantity', 0), \" g\"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.Float,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"10%\"), React.createElement(\"b\", {\n    className: Styles.Attribute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Cholesterol\"), \"  \", fixToTwo(product, 'totalNutrients.CHOLE.quantity', 0), \"mg\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.Float,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"10%\"), React.createElement(\"b\", {\n    className: Styles.Attribute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Sodium\"), \"  \", fixToTwo(product, 'totalNutrients.NA.quantity', 0), \" mg\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.Float,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"10%\"), React.createElement(\"b\", {\n    className: Styles.Attribute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Total Carbohydrates\"), \"  \", fixToTwo(product, 'totalNutrients.CHOCDF.quantity', 0), \" g\", React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.Float,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"10%\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Dietary Fiber  \", fixToTwo(product, 'totalNutrients.FIBTG.quantity', 0), \" g\"), React.createElement(\"div\", {\n    className: Styles.Float,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"10%\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Sugars  \", fixToTwo(product, 'totalNutrients.SUGAR.quantity', 0), \" g\"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.Float,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"10%\"), React.createElement(\"b\", {\n    className: Styles.Attribute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Protein\"), \"  \", fixToTwo(product, 'totalNutrients.PROCNT.quantity', 0), \" g\"))), React.createElement(Vitamins, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.Float,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"10%\"), React.createElement(\"b\", {\n    className: Styles.Attribute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Vitamin A\"), \"  \", fixToTwo(product, 'totalNutrients.VITA_RAE.quantity', 0), \" mg\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.Float,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"10%\"), React.createElement(\"b\", {\n    className: Styles.Attribute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Vitamin C\"), \"  \", fixToTwo(product, 'totalNutrients.VITC.quantity', 0), \" mg\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.Float,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"10%\"), React.createElement(\"b\", {\n    className: Styles.Attribute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Iron\"), \"  \", fixToTwo(product, 'totalNutrients.FE.quantity', 0), \" mg\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: Styles.Float,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"10%\"), React.createElement(\"b\", {\n    className: Styles.Attribute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Calcium\"), \"  \", fixToTwo(product, 'totalNutrients.CA.quantity', 0), \" mg\"))));\n};\n\nexport default nutritionLabel;","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/components/NutritionLabel/NutritionLabel.js"],"names":["React","Header","Nutrients","Vitamins","Styles","get","require","dailyIntake","ENERC_KCAL","FAT","FASAT","FATRN","CHOLE","NA","CHOCDF","FIBTG","SUGAR","PROCNT","VITA_RAE","VITC","FE","CA","nutritionLabel","props","product","fixToTwo","obj","path","def","Math","round","Container","Float","Attribute"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"./NutritionLabelComponents/Header/Header\";\nimport Nutrients from \"./NutritionLabelComponents/Nutrients/Nutrients\";\nimport Vitamins from \"./NutritionLabelComponents/Vitamins/Vitamins\";\nimport Styles from \"./NutritionLabel.module.css\";\n// import get from \"lodash.get\";\n\nvar get = require('lodash.get');\n\nconst dailyIntake = {\n    ENERC_KCAL:2000,\n    FAT:78,\n    FASAT:20,\n    FATRN:2,\n    CHOLE:300,\n    NA:2300,\n    CHOCDF:275,\n    FIBTG:28,\n    SUGAR:50,\n    PROCNT:50,\n    VITA_RAE:0.9,\n    VITC:90,\n    FE:18,\n    CA:1300\n}\n\n\nconst nutritionLabel = (props) => {  \n\n        const product = get(props,'product')\n\n        const fixToTwo = (obj, path, def) => {\n            return Math.round(get(obj, path, def)*100)/100\n            \n        }\n\n        return(\n            <div className={Styles.Container}>\n                <Header servingSize={fixToTwo(product,\"quantity.toFixed(1)\",100)}/>\n                <Nutrients calories={fixToTwo(product,\"totalNutrients.ENERC_KCAL.quantity\",0)}>\n                    <ul>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Total Fat</b>  {fixToTwo(product, 'totalNutrients.FAT.quantity', 0)} g\n                            <ul>\n                                <div className={Styles.Float}>10%</div>\n                                <li>Saturated Fat  {fixToTwo(product, 'totalNutrients.FASAT.quantity', 0)} g</li>\n                                <div className={Styles.Float}>10%</div>\n                                <li>Trans Fat  {fixToTwo(product, 'totalNutrients.FATRN.quantity', 0)} g</li>\n                            </ul>\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Cholesterol</b>  {fixToTwo(product, 'totalNutrients.CHOLE.quantity', 0)}mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Sodium</b>  {fixToTwo(product, 'totalNutrients.NA.quantity', 0)} mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Total Carbohydrates</b>  {fixToTwo(product, 'totalNutrients.CHOCDF.quantity', 0)} g\n                            <ul>\n                                <div className={Styles.Float}>10%</div>\n                                <li>Dietary Fiber  {fixToTwo(product, 'totalNutrients.FIBTG.quantity', 0)} g</li>\n                                <div className={Styles.Float}>10%</div>\n                                <li>Sugars  {fixToTwo(product, 'totalNutrients.SUGAR.quantity', 0)} g</li>\n                            </ul>\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Protein</b>  {fixToTwo(product, 'totalNutrients.PROCNT.quantity', 0)} g\n                        </li>\n                    </ul>\n                </Nutrients>\n                <Vitamins>\n                    <ul>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Vitamin A</b>  {fixToTwo(product, 'totalNutrients.VITA_RAE.quantity', 0)} mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Vitamin C</b>  {fixToTwo(product, 'totalNutrients.VITC.quantity', 0)} mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Iron</b>  {fixToTwo(product, 'totalNutrients.FE.quantity', 0)} mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Calcium</b>  {fixToTwo(product, 'totalNutrients.CA.quantity', 0)} mg\n                        </li>\n                    </ul>\n                </Vitamins>\n            </div>\n      )\n}\n\nexport default nutritionLabel;"]},"metadata":{},"sourceType":"module"}