{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/components/NutritionLabel/NutritionLabel.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./NutritionLabelComponents/Header/Header\";\nimport Nutrients from \"./NutritionLabelComponents/Nutrients/Nutrients\";\nimport Vitamins from \"./NutritionLabelComponents/Vitamins/Vitamins\";\nimport Styles from \"./NutritionLabel.module.css\";\n\nclass NutritionLabel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      product: {\n        name: \"Cheese\",\n        quantity: 100,\n        units: \"g\",\n        totalNutrients: {\n          ENERC_KCAL: {\n            label: \"Energy\",\n            quantity: 21814.306200000003,\n            unit: \"kcal\"\n          },\n          FAT: {\n            label: \"Fat\",\n            quantity: 1562.5579472000002,\n            unit: \"g\"\n          },\n          FASAT: {\n            label: \"Saturated\",\n            quantity: 538.5602623999998,\n            unit: \"g\"\n          },\n          FATRN: {\n            label: \"Trans\",\n            quantity: 0.015,\n            unit: \"g\"\n          },\n          CHOCDF: {\n            label: \"Carbs\",\n            quantity: 390.41195,\n            unit: \"g\"\n          },\n          FIBTG: {\n            label: \"Fiber\",\n            quantity: 48.5609,\n            unit: \"g\"\n          },\n          SUGAR: {\n            label: \"Sugars\",\n            quantity: 205.60635,\n            unit: \"g\"\n          },\n          PROCNT: {\n            label: \"Protein\",\n            quantity: 1466.6697507999997,\n            unit: \"g\"\n          },\n          CHOLE: {\n            label: \"Cholesterol\",\n            quantity: 6153.39888,\n            unit: \"mg\"\n          },\n          NA: {\n            label: \"Sodium\",\n            quantity: 14854.027320000001,\n            unit: \"mg\"\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: Styles.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Header, {\n      servingSize: this.state.itemsList[2].nutrition.servingSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Nutrients, {\n      calories: this.state.itemsList[2].nutrition.calories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Total Fat\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Saturated Fat \", this.state.itemsList[2].nutrition.saturatedFat, \"g\"), React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Trans Fat \", this.state.itemsList[2].nutrition.transFat))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Cholesterol\"), \" \", this.state.itemsList[2].nutrition.cholesterol, \"mg\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Sodium\"), \" \", this.state.itemsList[2].nutrition.sodium, \"mg\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Total Carbohydrates\"), \" \", this.state.itemsList[2].nutrition.totalCarbs, \"g\", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Dietary Fiber \", this.state.itemsList[2].nutrition.dietaryFiber, \"g\"), React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Sugars \", this.state.itemsList[2].nutrition.sugars, \"g\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Protein\"), \" \", this.state.itemsList[2].nutrition.protein, \"g\"))), React.createElement(Vitamins, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Vitamin A\"), \" \", this.state.itemsList[2].nutrition.vitaminA, \"mg\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Vitamin C\"), \" \", this.state.itemsList[2].nutrition.vitaminC, \"mg\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Iron\"), \" \", this.state.itemsList[2].nutrition.iron, \"mg\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Calcium\"), \" \", this.state.itemsList[2].nutrition.calcium, \"mg\"))));\n  }\n\n}\n\nexport default NutritionLabel;","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/components/NutritionLabel/NutritionLabel.js"],"names":["React","Component","Header","Nutrients","Vitamins","Styles","NutritionLabel","state","product","name","quantity","units","totalNutrients","ENERC_KCAL","label","unit","FAT","FASAT","FATRN","CHOCDF","FIBTG","SUGAR","PROCNT","CHOLE","NA","render","Container","itemsList","nutrition","servingSize","calories","Float","Attribute","saturatedFat","transFat","cholesterol","sodium","totalCarbs","dietaryFiber","sugars","protein","vitaminA","vitaminC","iron","calcium"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAOC,SAAP,MAAsB,gDAAtB;AACA,OAAOC,QAAP,MAAqB,8CAArB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCM,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAC,QADA;AAELC,QAAAA,QAAQ,EAAC,GAFJ;AAGLC,QAAAA,KAAK,EAAC,GAHD;AAILC,QAAAA,cAAc,EAAG;AACbC,UAAAA,UAAU,EAAC;AACTC,YAAAA,KAAK,EAAG,QADC;AAETJ,YAAAA,QAAQ,EAAG,kBAFF;AAGTK,YAAAA,IAAI,EAAG;AAHE,WADE;AAMbC,UAAAA,GAAG,EAAG;AACJF,YAAAA,KAAK,EAAG,KADJ;AAEJJ,YAAAA,QAAQ,EAAG,kBAFP;AAGJK,YAAAA,IAAI,EAAG;AAHH,WANO;AAWbE,UAAAA,KAAK,EAAG;AACNH,YAAAA,KAAK,EAAG,WADF;AAENJ,YAAAA,QAAQ,EAAG,iBAFL;AAGNK,YAAAA,IAAI,EAAG;AAHD,WAXK;AAgBbG,UAAAA,KAAK,EAAG;AACNJ,YAAAA,KAAK,EAAG,OADF;AAENJ,YAAAA,QAAQ,EAAG,KAFL;AAGNK,YAAAA,IAAI,EAAG;AAHD,WAhBK;AAqBbI,UAAAA,MAAM,EAAG;AACPL,YAAAA,KAAK,EAAG,OADD;AAEPJ,YAAAA,QAAQ,EAAG,SAFJ;AAGPK,YAAAA,IAAI,EAAG;AAHA,WArBI;AA0BbK,UAAAA,KAAK,EAAG;AACNN,YAAAA,KAAK,EAAG,OADF;AAENJ,YAAAA,QAAQ,EAAG,OAFL;AAGNK,YAAAA,IAAI,EAAG;AAHD,WA1BK;AA+BbM,UAAAA,KAAK,EAAG;AACNP,YAAAA,KAAK,EAAG,QADF;AAENJ,YAAAA,QAAQ,EAAG,SAFL;AAGNK,YAAAA,IAAI,EAAG;AAHD,WA/BK;AAoCbO,UAAAA,MAAM,EAAG;AACPR,YAAAA,KAAK,EAAG,SADD;AAEPJ,YAAAA,QAAQ,EAAG,kBAFJ;AAGPK,YAAAA,IAAI,EAAG;AAHA,WApCI;AAyCbQ,UAAAA,KAAK,EAAG;AACNT,YAAAA,KAAK,EAAG,aADF;AAENJ,YAAAA,QAAQ,EAAG,UAFL;AAGNK,YAAAA,IAAI,EAAG;AAHD,WAzCK;AA8CbS,UAAAA,EAAE,EAAG;AACHV,YAAAA,KAAK,EAAG,QADL;AAEHJ,YAAAA,QAAQ,EAAG,kBAFR;AAGHK,YAAAA,IAAI,EAAG;AAHJ;AA9CQ;AAJZ;AADL,KAD2B;AAAA;;AA4DnCU,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAEpB,MAAM,CAACqB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKnB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCC,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCE,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE3B,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKxB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCK,YAArD,MAFJ,EAGI;AAAK,MAAA,SAAS,EAAE5B,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKxB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCM,QAAjD,CAJJ,CAHJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE7B,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,OAEqD,KAAKzB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCO,WAFvF,OAXJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE9B,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,OAEgD,KAAKzB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCQ,MAFlF,OAfJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE/B,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,OAE6D,KAAKzB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCS,UAF/F,OAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEhC,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKxB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCU,YAArD,MAFJ,EAGI;AAAK,MAAA,SAAS,EAAEjC,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKxB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCW,MAA9C,MAJJ,CAHJ,CAnBJ,EA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAElC,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,OAEiD,KAAKzB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCY,OAFnF,MA7BJ,CADJ,CAFJ,EAsCI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEnC,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,OAEmD,KAAKzB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCa,QAFrF,OADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEpC,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,OAEmD,KAAKzB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCc,QAFrF,OALJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAErC,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,OAE8C,KAAKzB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCe,IAFhF,OATJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEtC,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,OAEiD,KAAKzB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCgB,OAFnF,OAbJ,CADJ,CAtCJ,CADJ;AA6DH;;AA1HkC;;AA6HvC,eAAetC,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./NutritionLabelComponents/Header/Header\";\nimport Nutrients from \"./NutritionLabelComponents/Nutrients/Nutrients\";\nimport Vitamins from \"./NutritionLabelComponents/Vitamins/Vitamins\";\nimport Styles from \"./NutritionLabel.module.css\";\n\nclass NutritionLabel extends Component {\n    state = {\n        product: {\n            name:\"Cheese\",\n            quantity:100,\n            units:\"g\",\n            totalNutrients : {\n                ENERC_KCAL:{\n                  label : \"Energy\",\n                  quantity : 21814.306200000003,\n                  unit : \"kcal\"\n                },\n                FAT : {\n                  label : \"Fat\",\n                  quantity : 1562.5579472000002,\n                  unit : \"g\"\n                },\n                FASAT : {\n                  label : \"Saturated\",\n                  quantity : 538.5602623999998,\n                  unit : \"g\"\n                },\n                FATRN : {\n                  label : \"Trans\",\n                  quantity : 0.015,\n                  unit : \"g\"\n                },\n                CHOCDF : {\n                  label : \"Carbs\",\n                  quantity : 390.41195,\n                  unit : \"g\"\n                },\n                FIBTG : {\n                  label : \"Fiber\",\n                  quantity : 48.5609,\n                  unit : \"g\"\n                },\n                SUGAR : {\n                  label : \"Sugars\",\n                  quantity : 205.60635,\n                  unit : \"g\"\n                },\n                PROCNT : {\n                  label : \"Protein\",\n                  quantity : 1466.6697507999997,\n                  unit : \"g\"\n                },\n                CHOLE : {\n                  label : \"Cholesterol\",\n                  quantity : 6153.39888,\n                  unit : \"mg\"\n                },\n                NA : {\n                  label : \"Sodium\",\n                  quantity : 14854.027320000001,\n                  unit : \"mg\"\n                }\n            }\n        }\n    } \n    render(){\n        return(\n            <div className={Styles.Container}>\n                <Header servingSize={this.state.itemsList[2].nutrition.servingSize}/>\n                <Nutrients calories={this.state.itemsList[2].nutrition.calories}>\n                    <ul>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Total Fat</b>\n                            <ul>\n                                <div className={Styles.Float}>10%</div>\n                                <li>Saturated Fat {this.state.itemsList[2].nutrition.saturatedFat}g</li>\n                                <div className={Styles.Float}>10%</div>\n                                <li>Trans Fat {this.state.itemsList[2].nutrition.transFat}</li>\n                            </ul>\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Cholesterol</b> {this.state.itemsList[2].nutrition.cholesterol}mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Sodium</b> {this.state.itemsList[2].nutrition.sodium}mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Total Carbohydrates</b> {this.state.itemsList[2].nutrition.totalCarbs}g\n                            <ul>\n                                <div className={Styles.Float}>10%</div>\n                                <li>Dietary Fiber {this.state.itemsList[2].nutrition.dietaryFiber}g</li>\n                                <div className={Styles.Float}>10%</div>\n                                <li>Sugars {this.state.itemsList[2].nutrition.sugars}g</li>\n                            </ul>\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Protein</b> {this.state.itemsList[2].nutrition.protein}g\n                        </li>\n                    </ul>\n                </Nutrients>\n                <Vitamins>\n                    <ul>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Vitamin A</b> {this.state.itemsList[2].nutrition.vitaminA}mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Vitamin C</b> {this.state.itemsList[2].nutrition.vitaminC}mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Iron</b> {this.state.itemsList[2].nutrition.iron}mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Calcium</b> {this.state.itemsList[2].nutrition.calcium}mg\n                        </li>\n                    </ul>\n                </Vitamins>\n            </div>\n        )\n    }\n}\n\nexport default NutritionLabel;"]},"metadata":{},"sourceType":"module"}