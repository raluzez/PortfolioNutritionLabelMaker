{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/components/NutritionLabel/NutritionLabel.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./NutritionLabelComponents/Header/Header\";\nimport Nutrients from \"./NutritionLabelComponents/Nutrients/Nutrients\";\nimport Vitamins from \"./NutritionLabelComponents/Vitamins/Vitamins\";\nimport Styles from \"./NutritionLabel.module.css\";\n\nclass NutritionLabel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      product: {\n        name: \"Cheese\",\n        quantity: 100,\n        units: \"g\",\n        totalNutrients: {\n          ENERC_KCAL: {\n            label: \"Energy\",\n            quantity: 21814.306200000003,\n            unit: \"kcal\"\n          },\n          FAT: {\n            label: \"Fat\",\n            quantity: 1562.5579472000002,\n            unit: \"g\"\n          },\n          FASAT: {\n            label: \"Saturated\",\n            quantity: 538.5602623999998,\n            unit: \"g\"\n          },\n          FATRN: {\n            label: \"Trans\",\n            quantity: 0.015,\n            unit: \"g\"\n          },\n          CHOCDF: {\n            label: \"Carbs\",\n            quantity: 390.41195,\n            unit: \"g\"\n          },\n          FIBTG: {\n            label: \"Fiber\",\n            quantity: 48.5609,\n            unit: \"g\"\n          },\n          SUGAR: {\n            label: \"Sugars\",\n            quantity: 205.60635,\n            unit: \"g\"\n          },\n          PROCNT: {\n            label: \"Protein\",\n            quantity: 1466.6697507999997,\n            unit: \"g\"\n          },\n          CHOLE: {\n            label: \"Cholesterol\",\n            quantity: 6153.39888,\n            unit: \"mg\"\n          },\n          NA: {\n            label: \"Sodium\",\n            quantity: 14854.027320000001,\n            unit: \"mg\"\n          },\n          CA: {\n            label: \"Calcium\",\n            quantity: 10.92,\n            unit: \"mg\"\n          },\n          FE: {\n            label: \"Iron\",\n            quantity: 0.2184,\n            unit: \"mg\"\n          },\n          VITA_RAE: {\n            label: \"Vitamin A\",\n            quantity: 5.46,\n            unit: \"Âµg\"\n          },\n          VITC: {\n            label: \"Vitamin C\",\n            quantity: 8.372,\n            unit: \"mg\"\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: Styles.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Header, {\n      servingSize: this.props.product ? this.props.product.quantity : 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Nutrients, {\n      calories: this.props.product.totalNutrients.ENERC_KCAL.quantity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Total Fat\"), \" \", this.props.product.totalNutrients.FAT.quantity ? this.props.product.totalNutrients.FAT.quantity : 0, \" g\", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Saturated Fat \", this.props.product.totalNutrients.FASAT.quantity ? this.props.product.totalNutrients.FASAT.quantity : 0, \"g\"), React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Trans Fat \", this.props.product.totalNutrients.FATRN.quantity ? this.props.product.totalNutrients.FATRN.quantity : 0))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Cholesterol\"), \" \", this.props.product.totalNutrients.CHOLE.quantity ? this.props.product.totalNutrients.CHOLE.quantity : 0, \"mg\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Sodium\"), \" \", this.props.product.totalNutrients.NA.quantity ? this.props.product.totalNutrients.NA.quantity : 0, \"mg\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Total Carbohydrates\"), \" \", this.props.product.totalNutrients.CHOCDF.quantity ? this.props.product.totalNutrients.CHOCDF.quantity : 0, \"g\", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Dietary Fiber \", this.props.product.totalNutrients.FIBTG.quantity ? this.props.product.totalNutrients.FIBTG.quantity : 0, \"g\"), React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Sugars \", this.props.product.totalNutrients.SUGAR.quantity ? this.props.product.totalNutrients.SUGAR.quantity : 0, \"g\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Protein\"), \" \", this.props.product.totalNutrients.PROCNT.quantity ? this.props.product.totalNutrients.PROCNT.quantity : 0, \"g\"))), React.createElement(Vitamins, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Vitamin A\"), \" \", this.props.product.totalNutrients.VITA_RAE.quantity ? this.props.product.totalNutrients.VITA_RAE.quantity : 0, \"mg\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Vitamin C\"), \" \", this.props.product.totalNutrients.VITC.quantity ? this.props.product.totalNutrients.VITC.quantity : 0, \"mg\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Iron\"), \" \", this.props.product.totalNutrients.FE.quantity ? this.props.product.totalNutrients.FE.quantity : 0, \"mg\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: Styles.Float,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"10%\"), React.createElement(\"b\", {\n      className: Styles.Attribute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Calcium\"), \" \", this.props.product.totalNutrients.CA.quantity ? this.props.product.totalNutrients.CA.quantity : 0, \"mg\"))));\n  }\n\n}\n\nexport default NutritionLabel;","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/components/NutritionLabel/NutritionLabel.js"],"names":["React","Component","Header","Nutrients","Vitamins","Styles","NutritionLabel","state","product","name","quantity","units","totalNutrients","ENERC_KCAL","label","unit","FAT","FASAT","FATRN","CHOCDF","FIBTG","SUGAR","PROCNT","CHOLE","NA","CA","FE","VITA_RAE","VITC","render","Container","props","Float","Attribute"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAOC,SAAP,MAAsB,gDAAtB;AACA,OAAOC,QAAP,MAAqB,8CAArB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCM,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAC,QADA;AAELC,QAAAA,QAAQ,EAAC,GAFJ;AAGLC,QAAAA,KAAK,EAAC,GAHD;AAILC,QAAAA,cAAc,EAAG;AACbC,UAAAA,UAAU,EAAC;AACTC,YAAAA,KAAK,EAAG,QADC;AAETJ,YAAAA,QAAQ,EAAG,kBAFF;AAGTK,YAAAA,IAAI,EAAG;AAHE,WADE;AAMbC,UAAAA,GAAG,EAAG;AACJF,YAAAA,KAAK,EAAG,KADJ;AAEJJ,YAAAA,QAAQ,EAAG,kBAFP;AAGJK,YAAAA,IAAI,EAAG;AAHH,WANO;AAWbE,UAAAA,KAAK,EAAG;AACNH,YAAAA,KAAK,EAAG,WADF;AAENJ,YAAAA,QAAQ,EAAG,iBAFL;AAGNK,YAAAA,IAAI,EAAG;AAHD,WAXK;AAgBbG,UAAAA,KAAK,EAAG;AACNJ,YAAAA,KAAK,EAAG,OADF;AAENJ,YAAAA,QAAQ,EAAG,KAFL;AAGNK,YAAAA,IAAI,EAAG;AAHD,WAhBK;AAqBbI,UAAAA,MAAM,EAAG;AACPL,YAAAA,KAAK,EAAG,OADD;AAEPJ,YAAAA,QAAQ,EAAG,SAFJ;AAGPK,YAAAA,IAAI,EAAG;AAHA,WArBI;AA0BbK,UAAAA,KAAK,EAAG;AACNN,YAAAA,KAAK,EAAG,OADF;AAENJ,YAAAA,QAAQ,EAAG,OAFL;AAGNK,YAAAA,IAAI,EAAG;AAHD,WA1BK;AA+BbM,UAAAA,KAAK,EAAG;AACNP,YAAAA,KAAK,EAAG,QADF;AAENJ,YAAAA,QAAQ,EAAG,SAFL;AAGNK,YAAAA,IAAI,EAAG;AAHD,WA/BK;AAoCbO,UAAAA,MAAM,EAAG;AACPR,YAAAA,KAAK,EAAG,SADD;AAEPJ,YAAAA,QAAQ,EAAG,kBAFJ;AAGPK,YAAAA,IAAI,EAAG;AAHA,WApCI;AAyCbQ,UAAAA,KAAK,EAAG;AACNT,YAAAA,KAAK,EAAG,aADF;AAENJ,YAAAA,QAAQ,EAAG,UAFL;AAGNK,YAAAA,IAAI,EAAG;AAHD,WAzCK;AA8CbS,UAAAA,EAAE,EAAG;AACHV,YAAAA,KAAK,EAAG,QADL;AAEHJ,YAAAA,QAAQ,EAAG,kBAFR;AAGHK,YAAAA,IAAI,EAAG;AAHJ,WA9CQ;AAmDbU,UAAAA,EAAE,EAAC;AACCX,YAAAA,KAAK,EAAC,SADP;AAECJ,YAAAA,QAAQ,EAAC,KAFV;AAGCK,YAAAA,IAAI,EAAC;AAHN,WAnDU;AAwDbW,UAAAA,EAAE,EAAC;AACCZ,YAAAA,KAAK,EAAC,MADP;AAECJ,YAAAA,QAAQ,EAAC,MAFV;AAGCK,YAAAA,IAAI,EAAC;AAHN,WAxDU;AA6DbY,UAAAA,QAAQ,EAAC;AACLb,YAAAA,KAAK,EAAC,WADD;AAELJ,YAAAA,QAAQ,EAAC,IAFJ;AAGLK,YAAAA,IAAI,EAAC;AAHA,WA7DI;AAkEba,UAAAA,IAAI,EAAC;AACDd,YAAAA,KAAK,EAAC,WADL;AAEDJ,YAAAA,QAAQ,EAAC,KAFR;AAGDK,YAAAA,IAAI,EAAC;AAHJ;AAlEQ;AAJZ;AADL,KAD2B;AAAA;;AAgFnCc,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAExB,MAAM,CAACyB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWvB,OAAX,GAAqB,KAAKuB,KAAL,CAAWvB,OAAX,CAAmBE,QAAxC,GAAmD,GAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCC,UAAlC,CAA6CH,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,OAEmD,KAAKF,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCI,GAAlC,CAAsCN,QAAtC,GAAiD,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCI,GAAlC,CAAsCN,QAAvF,GAAkG,CAFrJ,QAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKD,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCK,KAAlC,CAAwCP,QAAxC,GAAmD,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCK,KAAlC,CAAwCP,QAA3F,GAAsG,CAAzH,MAFJ,EAGI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKD,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCM,KAAlC,CAAwCR,QAAxC,GAAmD,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCM,KAAlC,CAAwCR,QAA3F,GAAsG,CAArH,CAJJ,CAHJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,OAEqD,KAAKF,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCW,KAAlC,CAAwCb,QAAxC,GAAmD,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCW,KAAlC,CAAwCb,QAA3F,GAAsG,CAF3J,OAXJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,OAEgD,KAAKF,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCY,EAAlC,CAAqCd,QAArC,GAAgD,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCY,EAAlC,CAAqCd,QAArF,GAAgG,CAFhJ,OAfJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,OAE6D,KAAKF,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCO,MAAlC,CAAyCT,QAAzC,GAAoD,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCO,MAAlC,CAAyCT,QAA7F,GAAwG,CAFrK,OAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKD,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCQ,KAAlC,CAAwCV,QAAxC,GAAmD,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCQ,KAAlC,CAAwCV,QAA3F,GAAsG,CAAzH,MAFJ,EAGI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKD,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCS,KAAlC,CAAwCX,QAAxC,GAAmD,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCS,KAAlC,CAAwCX,QAA3F,GAAsG,CAAlH,MAJJ,CAHJ,CAnBJ,EA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,OAEiD,KAAKF,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCU,MAAlC,CAAyCZ,QAAzC,GAAoD,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCU,MAAlC,CAAyCZ,QAA7F,GAAwG,CAFzJ,MA7BJ,CADJ,CAFJ,EAsCI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,OAEmD,KAAKF,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCe,QAAlC,CAA2CjB,QAA3C,GAAsD,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCe,QAAlC,CAA2CjB,QAAjG,GAA4G,CAF/J,OADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,OAEmD,KAAKF,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCgB,IAAlC,CAAuClB,QAAvC,GAAkD,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCgB,IAAlC,CAAuClB,QAAzF,GAAoG,CAFvJ,OALJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,OAE8C,KAAKF,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCc,EAAlC,CAAqChB,QAArC,GAAgD,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCc,EAAlC,CAAqChB,QAArF,GAAgG,CAF9I,OATJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC2B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAG,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,OAEiD,KAAKF,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCa,EAAlC,CAAqCf,QAArC,GAAgD,KAAKqB,KAAL,CAAWvB,OAAX,CAAmBI,cAAnB,CAAkCa,EAAlC,CAAqCf,QAArF,GAAgG,CAFjJ,OAbJ,CADJ,CAtCJ,CADJ;AA6DH;;AA9IkC;;AAiJvC,eAAeJ,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./NutritionLabelComponents/Header/Header\";\nimport Nutrients from \"./NutritionLabelComponents/Nutrients/Nutrients\";\nimport Vitamins from \"./NutritionLabelComponents/Vitamins/Vitamins\";\nimport Styles from \"./NutritionLabel.module.css\";\n\nclass NutritionLabel extends Component {\n    state = {\n        product: {\n            name:\"Cheese\",\n            quantity:100,\n            units:\"g\",\n            totalNutrients : {\n                ENERC_KCAL:{\n                  label : \"Energy\",\n                  quantity : 21814.306200000003,\n                  unit : \"kcal\"\n                },\n                FAT : {\n                  label : \"Fat\",\n                  quantity : 1562.5579472000002,\n                  unit : \"g\"\n                },\n                FASAT : {\n                  label : \"Saturated\",\n                  quantity : 538.5602623999998,\n                  unit : \"g\"\n                },\n                FATRN : {\n                  label : \"Trans\",\n                  quantity : 0.015,\n                  unit : \"g\"\n                },\n                CHOCDF : {\n                  label : \"Carbs\",\n                  quantity : 390.41195,\n                  unit : \"g\"\n                },\n                FIBTG : {\n                  label : \"Fiber\",\n                  quantity : 48.5609,\n                  unit : \"g\"\n                },\n                SUGAR : {\n                  label : \"Sugars\",\n                  quantity : 205.60635,\n                  unit : \"g\"\n                },\n                PROCNT : {\n                  label : \"Protein\",\n                  quantity : 1466.6697507999997,\n                  unit : \"g\"\n                },\n                CHOLE : {\n                  label : \"Cholesterol\",\n                  quantity : 6153.39888,\n                  unit : \"mg\"\n                },\n                NA : {\n                  label : \"Sodium\",\n                  quantity : 14854.027320000001,\n                  unit : \"mg\"\n                },\n                CA:{\n                    label:\"Calcium\",\n                    quantity:10.92,\n                    unit:\"mg\"\n                },\n                FE:{\n                    label:\"Iron\",\n                    quantity:0.2184,\n                    unit:\"mg\"\n                },\n                VITA_RAE:{\n                    label:\"Vitamin A\",\n                    quantity:5.46,\n                    unit:\"Âµg\"\n                },\n                VITC:{\n                    label:\"Vitamin C\",\n                    quantity:8.372,\n                    unit:\"mg\"\n                }\n            }\n        }\n    } \n    render(){\n        return(\n            <div className={Styles.Container}>\n                <Header servingSize={this.props.product ? this.props.product.quantity : 100}/>\n                <Nutrients calories={this.props.product.totalNutrients.ENERC_KCAL.quantity}>\n                    <ul>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Total Fat</b> {this.props.product.totalNutrients.FAT.quantity ? this.props.product.totalNutrients.FAT.quantity : 0} g\n                            <ul>\n                                <div className={Styles.Float}>10%</div>\n                                <li>Saturated Fat {this.props.product.totalNutrients.FASAT.quantity ? this.props.product.totalNutrients.FASAT.quantity : 0}g</li>\n                                <div className={Styles.Float}>10%</div>\n                                <li>Trans Fat {this.props.product.totalNutrients.FATRN.quantity ? this.props.product.totalNutrients.FATRN.quantity : 0}</li>\n                            </ul>\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Cholesterol</b> {this.props.product.totalNutrients.CHOLE.quantity ? this.props.product.totalNutrients.CHOLE.quantity : 0}mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Sodium</b> {this.props.product.totalNutrients.NA.quantity ? this.props.product.totalNutrients.NA.quantity : 0}mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Total Carbohydrates</b> {this.props.product.totalNutrients.CHOCDF.quantity ? this.props.product.totalNutrients.CHOCDF.quantity : 0}g\n                            <ul>\n                                <div className={Styles.Float}>10%</div>\n                                <li>Dietary Fiber {this.props.product.totalNutrients.FIBTG.quantity ? this.props.product.totalNutrients.FIBTG.quantity : 0}g</li>\n                                <div className={Styles.Float}>10%</div>\n                                <li>Sugars {this.props.product.totalNutrients.SUGAR.quantity ? this.props.product.totalNutrients.SUGAR.quantity : 0}g</li>\n                            </ul>\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Protein</b> {this.props.product.totalNutrients.PROCNT.quantity ? this.props.product.totalNutrients.PROCNT.quantity : 0}g\n                        </li>\n                    </ul>\n                </Nutrients>\n                <Vitamins>\n                    <ul>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Vitamin A</b> {this.props.product.totalNutrients.VITA_RAE.quantity ? this.props.product.totalNutrients.VITA_RAE.quantity : 0}mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Vitamin C</b> {this.props.product.totalNutrients.VITC.quantity ? this.props.product.totalNutrients.VITC.quantity : 0}mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Iron</b> {this.props.product.totalNutrients.FE.quantity ? this.props.product.totalNutrients.FE.quantity : 0}mg\n                        </li>\n                        <li>\n                            <div className={Styles.Float}>10%</div>\n                            <b className={Styles.Attribute}>Calcium</b> {this.props.product.totalNutrients.CA.quantity ? this.props.product.totalNutrients.CA.quantity : 0}mg\n                        </li>\n                    </ul>\n                </Vitamins>\n            </div>\n        )\n    }\n}\n\nexport default NutritionLabel;"]},"metadata":{},"sourceType":"module"}