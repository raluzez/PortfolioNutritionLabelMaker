{"ast":null,"code":"var _jsxFileName = \"/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Recipes/Recipes.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport AddProduct from \"../../components/Product/AddProduct/AddProduct\";\nimport Product from \"../../components/Product/Product\";\nimport RecipeModal from \"../../components/Recipe/RecipeModal/RecipeModal\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Recipes.module.css\";\n\nclass Recepies extends Component {\n  componentDidMount() {\n    this.props.onFetchRecipes();\n  }\n\n  render() {\n    let recipesList = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n\n    if (!this.props.loading) {\n      recipesList = React.createElement(AddProduct, {\n        name: \"Add New Recipe\",\n        clicked: () => this.props.history.push(\"/\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n      {\n        (this.props.recipes || []).map(recipe => React.createElement(Product, {\n          key: recipe.name,\n          name: recipe.name,\n          fatCalories: recipe.totalNutrients.FAT.quantity * 9,\n          carbohydratesCalories: recipe.totalNutrients.CHOCDF.quantity * 4,\n          proteinCalories: recipe.totalNutrients.PROCNT.quantity * 4,\n          clicked: () => {\n            this.props.onClickedRecipe(recipe);\n            this.props.onOpenModal();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }));\n      }\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(Modal, {\n      show: this.props.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(RecipeModal, {\n      product: this.props.clickedRecipe,\n      recipeItems: this.props.clickedRecipe.items,\n      closeIconClicked: () => this.props.onCloseModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), console.log(this.props.clickedRecipe)), React.createElement(\"div\", {\n      className: Styles.Recipe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, recipesList));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipe.savedRecipes,\n    showModal: state.productList.showModal,\n    clickedRecipe: state.recipe.clickedRecipe,\n    loading: state.recipe.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClickedRecipe: recipe => dispatch(actions.recipeClicked(recipe)),\n    onOpenModal: () => dispatch(actions.openModal()),\n    onCloseModal: () => dispatch(actions.closeModal()),\n    onFetchRecipes: () => dispatch(actions.fetchRecipes())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recepies);","map":{"version":3,"sources":["/home/lukas/Desktop/projects/nutrition-label-maker/src/containers/Recipes/Recipes.js"],"names":["React","Component","connect","Modal","AddProduct","Product","RecipeModal","Spinner","actions","Styles","Recepies","componentDidMount","props","onFetchRecipes","render","recipesList","loading","history","push","recipes","map","recipe","name","totalNutrients","FAT","quantity","CHOCDF","PROCNT","onClickedRecipe","onOpenModal","showModal","clickedRecipe","items","onCloseModal","console","log","Recipe","mapStateToProps","state","savedRecipes","productList","mapDispatchToProps","dispatch","recipeClicked","openModal","closeModal","fetchRecipes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport AddProduct from \"../../components/Product/AddProduct/AddProduct\";\nimport Product from \"../../components/Product/Product\";\nimport RecipeModal from \"../../components/Recipe/RecipeModal/RecipeModal\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../Store/actions\";\nimport Styles from \"./Recipes.module.css\";\n\n\nclass Recepies extends Component {\n\n    componentDidMount () {\n        this.props.onFetchRecipes()\n      }\n\n    render(){\n\n        let recipesList = <Spinner/>\n        if (!this.props.loading){\n            recipesList = \n                <AddProduct name=\"Add New Recipe\" clicked={() => this.props.history.push(\"/\")}/>\n                {(this.props.recipes || []).map(recipe =>(\n                    <Product\n                    key={recipe.name}\n                    name={recipe.name}\n                    fatCalories={recipe.totalNutrients.FAT.quantity*9}\n                    carbohydratesCalories={recipe.totalNutrients.CHOCDF.quantity*4}\n                    proteinCalories={recipe.totalNutrients.PROCNT.quantity*4}\n                    clicked={()=>{\n                        this.props.onClickedRecipe(recipe);\n                        this.props.onOpenModal()\n                    }}\n                />))}\n        }\n        return(\n            <>\n                <Modal show={this.props.showModal}>\n                    <RecipeModal\n                        product={this.props.clickedRecipe}\n                        recipeItems={this.props.clickedRecipe.items}\n                        closeIconClicked={()=>this.props.onCloseModal()}/>{console.log(this.props.clickedRecipe)}\n                </Modal>\n                <div className={Styles.Recipe}>\n                    {recipesList}  \n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        recipes: state.recipe.savedRecipes,\n        showModal: state.productList.showModal,\n        clickedRecipe: state.recipe.clickedRecipe,\n        loading: state.recipe.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      onClickedRecipe: (recipe) => dispatch(actions.recipeClicked(recipe)),\n      onOpenModal:() => dispatch(actions.openModal()),\n      onCloseModal:() => dispatch(actions.closeModal()),\n      onFetchRecipes:() => dispatch(actions.fetchRecipes())\n    }\n  }\n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recepies);"]},"metadata":{},"sourceType":"module"}